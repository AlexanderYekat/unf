#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ПроцедурыЗаполненияДокумента

// АПК:299-выкл процедуры вызываются в ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент()
// АПК:581-выкл процедуры вызываются в ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент()

// Процедура заполнения документа на основании без освобождения предоплаты
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - Документ - основание
//	
Процедура ЗаполнитьБезОсвобожденияПредоплаты(ДокументСсылка) Экспорт

	ЗакрываемыеДокументы.Очистить();
	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Организация"); 
	ДокументОснование = ДокументСсылка;
	СтрокаТЧ = ЗакрываемыеДокументы.Добавить();
	СтрокаТЧ.ДокументПлатежногоКалендаря = ДокументСсылка;
	
КонецПроцедуры

// Процедура заполнения документа на основании с освобождением предоплаты
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - Документ - основание
//	
Процедура ЗаполнитьСОсвобождениемПредоплаты(ДокументСсылка) Экспорт

	ЗаполнитьБезОсвобожденияПредоплаты(ДокументСсылка);
	ЗакрываемыеДокументы[0].ОсвободитьПредоплату = Истина;
	
КонецПроцедуры

// Обработчик заполнения документа по структуре.
//
// Параметры:
//  ДанныеЗаполнения - Структура.
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// АПК:299-вкл
// АПК:581-вкл

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьСОсвобождениемПредоплаты";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПоставщику")] = "ЗаполнитьБезОсвобожденияПредоплаты";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплату")] = "ЗаполнитьБезОсвобожденияПредоплаты";
	СтратегияЗаполнения[Тип("ДокументСсылка.СчетНаОплатуПоставщика")] = "ЗаполнитьБезОсвобожденияПредоплаты";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПоступлениеДСПлан")] = "ЗаполнитьБезОсвобожденияПредоплаты";
	СтратегияЗаполнения[Тип("ДокументСсылка.РасходДСПлан")] = "ЗаполнитьБезОсвобожденияПредоплаты";
	СтратегияЗаполнения[Тип("ДокументСсылка.ПеремещениеДСПлан")] = "ЗаполнитьБезОсвобожденияПредоплаты";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроведения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.ЗакрытиеПланируемыхОплат.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ПроведениеДокументовУНФ.ОтразитьДвижения("ПлатежныйКалендарь", ТаблицыДляДвижений, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеДокументовУНФ.ЗакрытьМенеджерВременныхТаблиц(ЭтотОбъект);
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа.
	ПроведениеДокументовУНФ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	ПроведениеДокументовУНФ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей.
	ПроведениеДокументовУНФ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеДокументовУНФ.ЗакрытьМенеджерВременныхТаблиц(ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик события ПриЗаписи объекта.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли