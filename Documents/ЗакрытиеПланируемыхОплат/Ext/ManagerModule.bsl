#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Контрагент)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

// Возвращает все документы, которые есть в платежном календаре.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация для отбора
//	Контрагент - СправочникСсылка.Контрагенты - Контрагент для отборв
//	ДокументСсылка - ДокументСсылка.ЗакрытиеПланируемыхОплат - Текущий документ
//
// Возвращаемое значение:
//  ТаблицаЗначений - документы, которые есть в платежном календаре
//
Функция ДокументыДляЗакрытияПланируемыхОплат(Организация, Контрагент, ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	
	// АПК:96-выкл Исключение: ОБЪЕДИНИТЬ является необходимым условием выполнения запроса.
	// АПК:1377-выкл Проектное решение.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ДокументПлатежногоКалендаря КАК ДокументПлатежногоКалендаря,
	|	ТаблицаДокумента.ОсвободитьПредоплату КАК ОсвободитьПредоплату,
	|	ТаблицаДокумента.ДокументПлатежногоКалендаря.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВременнаяТаблицаДокументы
	|ИЗ
	|	Документ.ЗакрытиеПланируемыхОплат.ЗакрываемыеДокументы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.ДокументПлатежногоКалендаря.Контрагент = &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлатежныйКалендарьОбороты.СчетНаОплату КАК ДокументПлатежногоКалендаря,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ПлатежныйКалендарьОбороты.СчетНаОплату) = ТИП(Документ.ЗаказПокупателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОсвободитьПредоплату,
	|	ПлатежныйКалендарьОбороты.СчетНаОплату.Контрагент КАК Контрагент
	|ИЗ
	|	РегистрНакопления.ПлатежныйКалендарь.Обороты(
	|			,
	|			,
	|			,
	|			Организация = &Организация
	|				И СчетНаОплату <> НЕОПРЕДЕЛЕНО
	|				И СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				И СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|				И СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплату.ПустаяСсылка)
	|				И СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПоставщика.ПустаяСсылка)
	|				И СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ПоступлениеДСПлан.ПустаяСсылка)
	|				И СчетНаОплату <> ЗНАЧЕНИЕ(Документ.РасходДСПлан.ПустаяСсылка)
	|				И СчетНаОплату <> ЗНАЧЕНИЕ(Документ.ПеремещениеДСПлан.ПустаяСсылка)) КАК ПлатежныйКалендарьОбороты
	|ГДЕ
	|	ПлатежныйКалендарьОбороты.СчетНаОплату.Контрагент = &Контрагент
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВременнаяТаблицаДокументы.ДокументПлатежногоКалендаря,
	|	ВременнаяТаблицаДокументы.ОсвободитьПредоплату,
	|	ВременнаяТаблицаДокументы.Контрагент
	|ИЗ
	|	ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы
	|ГДЕ
	|	ВременнаяТаблицаДокументы.Контрагент = &Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПлатежныйКалендарьОбороты.СчетНаОплату";
	
	// АПК:96-вкл
	// АПК:1377-вкл
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"ТаблицаДокумента.ДокументПлатежногоКалендаря.Контрагент = &Контрагент", "ИСТИНА");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"ПлатежныйКалендарьОбороты.СчетНаОплату.Контрагент = &Контрагент", "ИСТИНА");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Контрагент = &Контрагент", "");
	КонецЕсли;
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();

	Возврат ТаблицаДокументов;
	
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ЗакрытиеПланируемыхОплат.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Для использования в процедуре ДобавитьКомандыСозданияНаОсновании других модулей менеджеров объектов.
// Добавляет в список команд создания на основании этот объект.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - описание добавленной команды.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульСозданиеНаОсновании = ОбщегоНазначения.ОбщийМодуль("СозданиеНаОсновании");
		КомандаСозданияНаОсновании = МодульСозданиеНаОсновании.ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, Метаданные.Документы.ЗакрытиеПланируемыхОплат);
		Возврат КомандаСозданияНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура формирования таблицы платежного календаря.
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.ПриходДенежныхСредствПлан - Текущий документ
//	ДополнительныеСвойства - ДополнительныеСвойства - Дополнительные свойства документа
//
Процедура СформироватьТаблицаПлатежныйКалендарь(ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", СтруктураДополнительныеСвойства.ДляПроведения.Дата);
	Запрос.УстановитьПараметр("Организация", СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ДокументПлатежногоКалендаря КАК ДокументПлатежногоКалендаря
	|ПОМЕСТИТЬ ВременнаяТаблицаДокументы
	|ИЗ
	|	Документ.ЗакрытиеПланируемыхОплат.ЗакрываемыеДокументы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПлатежныйКалендарьОбороты.Организация КАК Организация,
	|	ПлатежныйКалендарьОбороты.Валюта КАК Валюта,
	|	ПлатежныйКалендарьОбороты.Статья КАК Статья,
	|	ПлатежныйКалендарьОбороты.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ПлатежныйКалендарьОбороты.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ПлатежныйКалендарьОбороты.СчетНаОплату КАК СчетНаОплату,
	|	ПлатежныйКалендарьОбороты.СтатусУтвержденияПлатежа КАК СтатусУтвержденияПлатежа,
	|	-ПлатежныйКалендарьОбороты.СуммаОборот КАК Сумма,
	|	-ПлатежныйКалендарьОбороты.СуммаОплатыОборот КАК СуммаОплаты
	|ИЗ
	|	РегистрНакопления.ПлатежныйКалендарь.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			Организация = &Организация
	|				И СчетНаОплату В
	|					(ВЫБРАТЬ
	|						ВременнаяТаблицаДокументы.ДокументПлатежногоКалендаря КАК ДокументПлатежногоКалендаря
	|					ИЗ
	|						ВременнаяТаблицаДокументы КАК ВременнаяТаблицаДокументы)) КАК ПлатежныйКалендарьОбороты
	|ГДЕ
	|	ПлатежныйКалендарьОбороты.Регистратор <> &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаПлатежныйКалендарь",
		РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаПлатежныйКалендарь()

// Формирует таблицу данных документа.
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.ПриходДенежныхСредствПлан - Текущий документ
//	СтруктураДополнительныеСвойства - ДополнительныеСвойства - Дополнительные свойства документа
//	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	СформироватьТаблицаПлатежныйКалендарь(ДокументСсылка, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

#КонецОбласти

#КонецЕсли