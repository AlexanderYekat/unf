
#Область ПрограммныйИнтерфейс

// АПК:299-выкл для использования из менеджеров документов.
Процедура ОткрытьФормуНастройкиПунктовСозданияНаОсновании(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   
	ДополнительныеПараметры = ПараметрыВыполненияКоманды.ОписаниеКоманды.ДополнительныеПараметры;
	ПараметрыФормы = Новый Структура("ПолноеИмяОбъекта");
	Если ДополнительныеПараметры.Свойство("ПолноеИмяОбъекта") Тогда   
		ПараметрыФормы.ПолноеИмяОбъекта = ПараметрыВыполненияКоманды.ОписаниеКоманды.ДополнительныеПараметры.ПолноеИмяОбъекта;
	КонецЕсли;
	ОткрытьФорму("РегистрСведений.НастройкиПунктовСозданияНаОсновании.Форма.ФормаНастройки", ПараметрыФормы);    
КонецПроцедуры        

Процедура ДокументЗаказПокупателяВвестиФактическийПлатеж(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Источник);
	
	Если ПараметрыВыполненияКоманды.Форма.Элементы.Найти("РедактироватьСписком") <> Неопределено
		И ПараметрыВыполненияКоманды.Форма.Объект.ЗапланироватьОплату Тогда
		
		Если ПараметрыВыполненияКоманды.Форма.Элементы.РедактироватьСписком.Пометка Тогда
			ПлатежныйКалендарьТекущаяСтрока = ПараметрыВыполненияКоманды.Форма.Элементы.СписокПлатежныйКалендарь.ТекущиеДанные;
		ИначеЕсли ПараметрыВыполненияКоманды.Форма.Объект.ПлатежныйКалендарь.Количество() > 0 Тогда
			ПлатежныйКалендарьТекущаяСтрока = ПараметрыВыполненияКоманды.Форма.Объект.ПлатежныйКалендарь[0];
		КонецЕсли;
		
		Если ПлатежныйКалендарьТекущаяСтрока <> Неопределено Тогда
			
			СтруктураЗаполнения = Новый Структура;
			СтруктураЗаполнения.Вставить("Основание", Источник);
			СтруктураЗаполнения.Вставить("НомерСтроки", ПлатежныйКалендарьТекущаяСтрока.НомерСтроки);
			ПараметрыФормы.Вставить("Основание", СтруктураЗаполнения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТипДенежныхСредств = СозданиеНаОснованииВызовСервера.ЗначениеРеквизитаОбъекта(Источник, "ТипДенежныхСредств");
	Если ТипДенежныхСредств = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Наличные") Тогда
		ИмяФормы = "Документ.ПоступлениеВКассу.ФормаОбъекта";
	Иначе
		ИмяФормы = "Документ.ПоступлениеНаСчет.ФормаОбъекта";
	КонецЕсли;
	
	ОткрытьФорму(ИмяФормы,
		ПараметрыФормы,
		ПараметрыВыполненияКоманды.Форма);
	
	СтатистикаИспользованияФормКлиент.ПроверитьЗаписатьСтатистикуКоманды(
		"СоздатьНаОсновании.ВвестиФактическийПлатеж",
		ПараметрыВыполненияКоманды.Форма);    
		
КонецПроцедуры        

Процедура ДокументЗаказПоставщикуПоКалькуляции(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ЗаказПокупателя", Источник);
	ДанныеЗаполнения.Вставить("ПоКалькуляции", Истина);
	
	ПараметрыФормы = Новый Структура("Основание", ДанныеЗаполнения);
	ОткрытьФорму("Документ.ЗаказПоставщику.ФормаОбъекта", 
		ПараметрыФормы,
		ПараметрыВыполненияКоманды.Форма);
	
	СтатистикаИспользованияФормКлиент.ПроверитьЗаписатьСтатистикуКоманды(
		"СоздатьНаОсновании.ЗаказПоставщикуПоКалькуляции",
		ПараметрыВыполненияКоманды.Источник);
		
КонецПроцедуры        

Процедура ДокументЗаказыПоставщикамБизнесСеть(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ПараметрыКоманды", ПараметрыВыполненияКоманды.МассивСсылок);
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПоискПоТоварам",
		СтруктураРеквизитов,
		ПараметрыВыполненияКоманды.Форма);
		
КонецПроцедуры      
	
Процедура ДокументПриходнаяНакладнаяПриемВПереработку(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   

	СтруктураЗаполнения = Новый Структура("Основание", Источник);
	ОткрытьФорму("Документ.ПриходнаяНакладная.ФормаОбъекта", СтруктураЗаполнения);
		
КонецПроцедуры        

Процедура ДокументСборкаЗапасовЧастичныйВыпуск(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Источник);
	ПараметрыФормы.Вставить("ИмяМенеджераДокумента","СборкаЗапасов");
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(
	"СоздатьСборкаЗапасовЗаказовПослеУточнения",
	ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.СозданиеНаОснованииУточнениеКоличества",
		ПараметрыФормы,
		ПараметрыВыполненияКоманды.Форма,,,,
		ОписаниеОповещенияОЗакрытии);
		
КонецПроцедуры       
	
Процедура СоздатьСборкаЗапасовЗаказовПослеУточнения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура();
	Основание.Вставить("АдресТовары", Результат.АдресТовары);
	Основание.Вставить("Основание", Результат.Основание);
	
	ПараметрыОткрытия = Новый Структура("Основание", Основание);
	
		ОткрытьФорму("Документ.СборкаЗапасов.Форма.ФормаДокумента",
		ПараметрыОткрытия,
		,
		Новый УникальныйИдентификатор);
	
КонецПроцедуры

Процедура ДокументРезервированиеСнятьРезерв(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   
	
	СтруктураЗаполнения = Новый Структура();
	СтруктураЗаполнения.Вставить("ДокументЗаполнения", Источник);
	СтруктураЗаполнения.Вставить("СнятьРезерв", Истина);
	
	ОткрытьФорму("Документ.РезервированиеЗапасов.ФормаОбъекта", Новый Структура("Основание", СтруктураЗаполнения));
	
	СтатистикаИспользованияФормКлиент.ПроверитьЗаписатьСтатистикуКоманды(
		"СоздатьНаОсновании.РезервированиеСнятьСоздатьНаОсновании",
		ПараметрыВыполненияКоманды.Источник);
		
КонецПроцедуры       

Процедура ДокументЗаданиеНаРаботуКоманда(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт 
	
	Если ТипЗнч(ПараметрыВыполненияКоманды.Источник) = Тип("ДанныеФормыСтруктура") Тогда
	  	// Запуск из формы документа
		СтруктураЗаполнения = Новый Структура();
		СтруктураЗаполнения.Вставить("Организация", ПараметрыВыполненияКоманды.Источник.Организация);
		СтруктураЗаполнения.Вставить("ВидЦен", ПараметрыВыполненияКоманды.Источник.ВидЦен);
		Если ПараметрыВыполненияКоманды.Источник.Свойство("ВидРабот") Тогда
			СтруктураЗаполнения.Вставить("ВидРабот", ПараметрыВыполненияКоманды.Источник.ВидРабот);
		КонецЕсли;
		
		СтруктураЗаполнения.Вставить("СтруктурнаяЕдиница", ПараметрыВыполненияКоманды.Источник.СтруктурнаяЕдиницаПродажи);
		
		РаботыТекущаяСтрока = Неопределено;
		ЗапасыТекущаяСтрока = Неопределено;
		Если ПараметрыВыполненияКоманды.Источник.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд") Тогда
			РаботыТекущаяСтрока = ПараметрыВыполненияКоманды.Форма.Элементы.Работы.ТекущиеДанные;
			СтруктураЗаполнения.Вставить("ВидРабот", ПараметрыВыполненияКоманды.Источник.ВидРабот);
		Иначе
			ЗапасыТекущаяСтрока = ПараметрыВыполненияКоманды.Форма.Элементы.Запасы.ТекущиеДанные;
		КонецЕсли;
		
		Если ЗапасыТекущаяСтрока <> Неопределено И НЕ ЗапасыТекущаяСтрока.ТипНоменклатурыЗапас Тогда
			
			СтруктураСтрока = Новый Структура;
			СтруктураСтрока.Вставить("Номенклатура", ЗапасыТекущаяСтрока.Номенклатура);
			СтруктураСтрока.Вставить("Характеристика", ЗапасыТекущаяСтрока.Характеристика);
			СтруктураСтрока.Вставить("День", ЗапасыТекущаяСтрока.ДатаОтгрузки);
			СтруктураСтрока.Вставить("Цена", ЗапасыТекущаяСтрока.Цена);
			СтруктураСтрока.Вставить("Сумма", ЗапасыТекущаяСтрока.Сумма);
			СтруктураСтрока.Вставить("Заказчик", ПараметрыВыполненияКоманды.Источник.Ссылка);
			
			Массив = Новый Массив;
			Массив.Добавить(СтруктураСтрока);
			
			СтруктураЗаполнения.Вставить("Работы", Массив);
			
		ИначеЕсли РаботыТекущаяСтрока <> Неопределено Тогда
			
			СтруктураСтрока = Новый Структура;
			СтруктураСтрока.Вставить("ВидРабот", РаботыТекущаяСтрока.ВидРабот);
			СтруктураСтрока.Вставить("Номенклатура", РаботыТекущаяСтрока.Номенклатура);
			СтруктураСтрока.Вставить("Характеристика", РаботыТекущаяСтрока.Характеристика);
			СтруктураСтрока.Вставить("День", ПараметрыВыполненияКоманды.Источник.Старт);
			
			ДлительностьВЧасах = РаботыТекущаяСтрока.Количество * РаботыТекущаяСтрока.Кратность * РаботыТекущаяСтрока.Коэффициент;
			Если ДлительностьВЧасах >= 24 Тогда
				ДлительностьВЧасах = (КонецДня(ПараметрыВыполненияКоманды.Источник.Старт) - ПараметрыВыполненияКоманды.Источник.Старт) / 3600;
			КонецЕсли;  
			
			СтруктураСтрока.Вставить("ДлительностьВЧасах", ДлительностьВЧасах);
			
			ДлительностьВСекундах = ДлительностьВЧасах * 3600;
			Часы = Цел(ДлительностьВСекундах / 3600);
			Минуты = (ДлительностьВСекундах - Часы * 3600) / 60;
			Длительность = Дата(0001, 01, 01, Часы, Минуты, 0);
			СтруктураСтрока.Вставить("Длительность", Длительность);
			
			Старт = Дата(0001, 01, 01, Час(ПараметрыВыполненияКоманды.Источник.Старт), Минута(ПараметрыВыполненияКоманды.Источник.Старт), 0);
			СтруктураСтрока.Вставить("ВремяНачала", Старт);
			СтруктураСтрока.Вставить("ВремяОкончания", Старт + ДлительностьВЧасах * 3600);
			
			СтруктураСтрока.Вставить("Цена", РаботыТекущаяСтрока.Цена);
			СтруктураСтрока.Вставить("Сумма", РаботыТекущаяСтрока.Сумма);
			СтруктураСтрока.Вставить("Заказчик", ПараметрыВыполненияКоманды.Источник.Ссылка);
			
			Массив = Новый Массив;
			Массив.Добавить(СтруктураСтрока);
			
			СтруктураЗаполнения.Вставить("Работы", Массив);
			
			МассивСтрокИсполнители = ПараметрыВыполненияКоманды.Источник.Исполнители.НайтиСтроки(Новый Структура("КлючСвязи", РаботыТекущаяСтрока.КлючСвязи));
			Для каждого СтрокаИсполнители Из МассивСтрокИсполнители Цикл
				СтруктураЗаполнения.Вставить("Сотрудник", СтрокаИсполнители.Сотрудник);
				Прервать;
			КонецЦикла;
			
		Иначе
			
			СтруктураСтрока = Новый Структура;
			СтруктураСтрока.Вставить("Заказчик", ПараметрыВыполненияКоманды.Источник.Ссылка);
			
			Массив = Новый Массив;
			Массив.Добавить(СтруктураСтрока);
			
			СтруктураЗаполнения.Вставить("Работы", Массив);
		КонецЕсли; 
	Иначе
		// запуск из формы списка
		СтруктураЗаполнения = Источник;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЗаданиеНаРаботу.ФормаОбъекта", Новый Структура("Основание", СтруктураЗаполнения));
	
	СтатистикаИспользованияФормКлиент.ПроверитьЗаписатьСтатистикуКоманды(
		"СоздатьНаОсновании.КомандаЗаданиеНаРаботуСоздатьНаОсновании",
		ПараметрыВыполненияКоманды.Источник);
	
КонецПроцедуры

Процедура СозданиеСвязанныхОбъектов(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   

	ВходныеПараметры = Новый Структура;  
	ВходныеПараметры.Вставить("Источник", ПараметрыВыполненияКоманды.Форма);
	ДополнительныеОтчетыИОбработкиКлиент.ОткрытьФормуКомандДополнительныхОтчетовИОбработок(
		Источник,
		ВходныеПараметры,
		ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиСозданиеСвязанныхОбъектов());
		
КонецПроцедуры       

Процедура ЧекКоррекции(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   
	
	ДокументОснование = Источник;
	
	// Для предотвращения повторного открытия форм ввода чека коррекции по одному Документу расчетов
	// назначается ключ уникальности в виде УникальныйИдентификатора документа расчетов
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЧекККМКоррекции") Тогда
		
		РеквизитыОснования = СозданиеНаОснованииВызовСервера.ЗначенияРеквизитовОбъекта(ДокументОснование, "НеприменениеККТ, ДокументРасчетов");
		
		Если РеквизитыОснования.НеприменениеККТ Тогда
			ДокументРасчетов = ДокументОснование;
		Иначе
			ДокументРасчетов = РеквизитыОснования.ДокументРасчетов;
		КонецЕсли;
		
	Иначе
		
		ДокументРасчетов = ДокументОснование;
		
	КонецЕсли;
	
	КлючУникальности = ДокументРасчетов.УникальныйИдентификатор();
	
	ПараметрыФормы = Новый Структура("ДокументОснование", ДокументОснование);
	
	ОткрытьФорму("Обработка.СозданиеЧековКоррекции.Форма",
					ПараметрыФормы,
					,
					КлючУникальности,
					ПараметрыВыполненияКоманды.Окно,
					ПараметрыВыполненияКоманды.НавигационнаяСсылка);
		
КонецПроцедуры       

Процедура Комплектация(Знач Источник, Знач ПараметрыВыполненияКоманды) Экспорт   
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Источник);
	ПараметрыФормы.Вставить("ИмяМенеджераДокумента","КомплектацияЗапасов");
	
	КоличествоКомплектов = СозданиеНаОснованииВызовСервера.ПолучитьКоличествоКомплектов(Источник); 
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(
	"СоздатьКомплектацияЗаказовПослеУточнения",
	ЭтотОбъект,
	ПараметрыВыполненияКоманды);
	
	Если КоличествоКомплектов = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'В Заказе покупателю нет комплектов для сборки'"),10);
	ИначеЕсли КоличествоКомплектов = 1 Тогда
		ОткрытьФорму("Документ.КомплектацияЗапасов.ФормаОбъекта",
		ПараметрыФормы,
		ПараметрыВыполненияКоманды.Форма);
	Иначе
		ОткрытьФорму("ОбщаяФорма.СозданиеНаОснованииУточнениеКоличества",
		ПараметрыФормы,
		ПараметрыВыполненияКоманды.Форма,,,,
		ОписаниеОповещенияОЗакрытии);
	КонецЕсли;
		
КонецПроцедуры       

Процедура СоздатьКомплектацияЗаказовПослеУточнения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура();
	Основание.Вставить("АдресТовары", Результат.АдресТовары);
	Основание.Вставить("Основание", Результат.Основание);
	
	ПараметрыОткрытия = Новый Структура("Основание", Основание);
	Если Результат.КоличествоИзделий = 1 Тогда
		ОткрытьФорму("Документ.КомплектацияЗапасов.Форма.ФормаДокумента",
		ПараметрыОткрытия,
		,
		Новый УникальныйИдентификатор);
	Иначе
		МассивКомплектаций = СозданиеНаОснованииВызовСервера.СоздатьДокументыКомплектации(Основание); 
		
		Текст = НСтр("ru='Создание:'");
		Для каждого СтрокаКомплектация Из МассивКомплектаций Цикл
			
			ПоказатьОповещениеПользователя(Текст, ПолучитьНавигационнуюСсылку(СтрокаКомплектация), СтрокаКомплектация, БиблиотекаКартинок.Информация32);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// АПК:299-вкл

#КонецОбласти
