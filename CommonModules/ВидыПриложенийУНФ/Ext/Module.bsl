
#Область ПрограммныйИнтерфейс

// См. ВидыПриложенийПереопределяемый.ПриОпределенииВидовПриложенийКонфигурации
Процедура ПриОпределенииВидовПриложенийКонфигурации(ВидыПриложений) Экспорт
	
	Если СтрНачинаетсяС(Метаданные.Имя, "Розница") Тогда
		Возврат;
	КонецЕсли;
	
	НовыйВидПриложенияРозница = ВидыПриложений.Добавить();
	НовыйВидПриложенияРозница.Имя = "Розница";
	НовыйВидПриложенияРозница.Представление = НСтр("ru='Розница'");
	
	УслугаВидаПриложенияРозница = ВидыПриложенийСервер.НоваяУслуга();
	УслугаВидаПриложенияРозница.ИдентификаторПоставщика = ТарификацияУНФ.ИдентификаторПоставщикаУНФ();
	УслугаВидаПриложенияРозница.ИдентификаторУслуги = ТарификацияУНФ.ИдентификаторУслугиРозница();
	НовыйВидПриложенияРозница.Услуги.Добавить(УслугаВидаПриложенияРозница);
	
	ДополнительныеСвойства = НовыйВидПриложенияРозница.ДополнительныеСвойства;
	ДополнительныеСвойства.Вставить("ИмяМакетаРасширения", "ЗаставкаРозница");
	ДополнительныеСвойства.Вставить("ИдентификаторИнтернетПоддержки", "Retail");
	
	НовыйВидПриложенияРозница.Процедура = "ВидыПриложенийУНФ.УстановитьВидПриложенияРозница";
	
КонецПроцедуры

// См. ВидыПриложенийПереопределяемый.ПриОпределенииДопСвойствБазовогоВидаПриложения
Процедура ПриОпределенииДопСвойствБазовогоВидаПриложения(ДополнительныеСвойства) Экспорт
	
	ДополнительныеСвойства.Вставить("ИмяМакетаРасширения", "");
	ДополнительныеСвойства.Вставить("ИдентификаторИнтернетПоддержки",
		ОбщегоНазначения.ИдентификаторИнтернетПоддержкиКонфигурации());
	
	КонецПроцедуры

// См. ВидыПриложенийПереопределяемый.ПриДобавленииОбработчиковПереходаВидовПриложений
Процедура ПриДобавленииОбработчиковПереходаВидовПриложений(Обработчики) Экспорт
	
	ОбработчикПереходаНаУНФ = Обработчики.Добавить();
	ОбработчикПереходаНаУНФ.ИсходноеИмяВидаПриложения = "Розница";
	ОбработчикПереходаНаУНФ.ИмяВидаПриложения = ВидыПриложенийСервер.БазовыйВидПриложения().Имя;
	ОбработчикПереходаНаУНФ.Процедура = "ВозможностиПриложения.ОбновлениеРозницыДоУНФ";
	
КонецПроцедуры

// Установить вид приложения Розница
//
// Параметры:
//  РезультатОбработки - см. ВидыПриложенийСервер.НовыйРезультатОбработки
//
Процедура УстановитьВидПриложенияРозница(РезультатОбработки) Экспорт
	
	Попытка
		
		ВозможностиПриложения.ПриПодключенииУслугиРозница();
		
	Исключение
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ПодробноеПредставлениеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		РезультатОбработки.Ошибка = Истина;
		РезультатОбработки.Сообщение = СтрШаблон(
			НСтр("ru = 'Ошибка при установке вида приложения ""Розница:
			|%1'"),
			ПодробноеПредставлениеОшибки);
		
	КонецПопытки;

КонецПроцедуры

// См. ВидыПриложенийПереопределяемый.ПослеУстановкиВидаПриложения
Процедура ПослеУстановкиВидаПриложения(ВидПриложения, РезультатОбработки) Экспорт
	
	СвойстваВидаПриложения = ВидыПриложенийСервер.СвойстваВидаПриложенияПоИмени(ВидПриложения);
	ИмяМакетаРасширения = СвойстваВидаПриложения.ДополнительныеСвойства.ИмяМакетаРасширения;
	
	Если ЗначениеЗаполнено(ИмяМакетаРасширения) Тогда
		УстановитьРасширениеВидаПриложения(ИмяМакетаРасширения, РезультатОбработки);
	КонецЕсли;
	
КонецПроцедуры

// См. ВидыПриложенийПереопределяемый.ПослеПереходаНаВидПриложения
Процедура ПослеПереходаНаВидПриложения(ВидПриложения, ЦелевойВидПриложения, РезультатОбработки) Экспорт
	
	СвойстваВидаПриложения = ВидыПриложенийСервер.СвойстваВидаПриложенияПоИмени(ВидПриложения);
	ИмяМакетаРасширенияВидаПриложения = СвойстваВидаПриложения.ДополнительныеСвойства.ИмяМакетаРасширения;

	СвойстваЦелевогоВидаПриложения = ВидыПриложенийСервер.СвойстваВидаПриложенияПоИмени(ЦелевойВидПриложения);
	ИмяМакетаРасширенияЦелевогоВидаПриложения = СвойстваЦелевогоВидаПриложения.ДополнительныеСвойства.ИмяМакетаРасширения;

	// удаление, при необходимости, расширения прошлого вида приложения
	Если ЗначениеЗаполнено(ИмяМакетаРасширенияВидаПриложения) Тогда
		УдалитьРасширениеВидаПриложения(ИмяМакетаРасширенияВидаПриложения, РезультатОбработки);
	КонецЕсли;

	Если РезультатОбработки.Ошибка Тогда
		Возврат;
	КонецЕсли;

	// удаление, при необходимости, расширения целевого вида приложения
	Если ЗначениеЗаполнено(ИмяМакетаРасширенияЦелевогоВидаПриложения) Тогда
		УстановитьРасширениеВидаПриложения(ИмяМакетаРасширенияЦелевогоВидаПриложения, РезультатОбработки);
	КонецЕсли;

КонецПроцедуры

// См. ВидыПриложенийПереопределяемый.ПриОпределенииПараметровУведомления
Процедура ПриОпределенииПараметровУведомления(ПараметрыУведомления) Экспорт
	
	ПараметрыУведомления.Показывать = Истина;
	
КонецПроцедуры

// См. ВидыПриложенийПереопределяемый.ПриОпределенииИменРасширенийВидовПриложений
Процедура ПриОпределенииИменРасширенийВидовПриложений(ИменаРасширений) Экспорт
	
	ВидыПриложений = ВидыПриложенийСервер.ВидыПриложенийКонфигурации();
	
	Для Каждого ВидПриложения Из ВидыПриложений Цикл
		ИмяМакетаРасширения = ВидПриложения.ДополнительныеСвойства.ИмяМакетаРасширения;
			
		Если ЗначениеЗаполнено(ИмяМакетаРасширения) Тогда
			ОписаниеРасширения = Новый ОписаниеКонфигурации(ПолучитьОбщийМакет(ИмяМакетаРасширения));
			ИменаРасширений.Добавить(ОписаниеРасширения.Имя);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановитьРасширениеВидаПриложенияПриНеобходимости(Параметры) Экспорт

	ИмяТекущегоВидаПриложения = ВидыПриложенийСервер.ИмяТекущегоВидаПриложения();
	Если ПустаяСтрока(ИмяТекущегоВидаПриложения) Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	СвойстваВидаПриложения = ВидыПриложенийСервер.СвойстваВидаПриложенияПоИмени(ИмяТекущегоВидаПриложения);
	ИмяМакетаРасширения = СвойстваВидаПриложения.ДополнительныеСвойства.ИмяМакетаРасширения;
	Если Не ЗначениеЗаполнено(ИмяМакетаРасширения) Тогда
		Возврат;
	КонецЕсли;

	УстановленноеРасширение = УстановленноеРасширение(ИмяМакетаРасширения);
	Если УстановленноеРасширение <> Неопределено Тогда
		Возврат;
	КонецЕсли;

	РасширениеДляУстановки = РасширенияКонфигурации.Создать();

	РасширениеДляУстановки.Активно = Истина;
	РасширениеДляУстановки.БезопасныйРежим = Ложь;
	РасширениеДляУстановки.ЗащитаОтОпасныхДействий = Новый ОписаниеЗащитыОтОпасныхДействий;
	РасширениеДляУстановки.ЗащитаОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях = Ложь;
	РасширениеДляУстановки.ИспользоватьОсновныеРолиДляВсехПользователей = Ложь;
	ДанныеРасширения = ПолучитьОбщийМакет(ИмяМакетаРасширения);
	РасширениеДляУстановки.Записать(ДанныеРасширения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьРасширениеВидаПриложения(ИмяМакетаРасширения, РезультатОбработки)
	
	Расширение = УстановленноеРасширение(ИмяМакетаРасширения);
	Если Расширение <> Неопределено Тогда
		РезультатОбработки.Ошибка = Истина;
		РезультатОбработки.Сообщение = СтрШаблон(
			НСтр("ru = 'Нельзя добавить расширение макета ""%1"", т.к. расширение с таким именем уже установлено.'"),
			ИмяМакетаРасширения);
		
		Возврат;
	КонецЕсли;
	
	Расширение = РасширенияКонфигурации.Создать();
	
	Расширение.Активно = Истина;
	Расширение.БезопасныйРежим = Ложь;
	Расширение.ЗащитаОтОпасныхДействий = Новый ОписаниеЗащитыОтОпасныхДействий();
	Расширение.ЗащитаОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях = Ложь;
	Расширение.ИспользоватьОсновныеРолиДляВсехПользователей = Ложь;
	Расширение.Записать(ПолучитьОбщийМакет(ИмяМакетаРасширения));
	
КонецПроцедуры

Процедура УдалитьРасширениеВидаПриложения(ИмяМакетаРасширения, РезультатОбработки)
	
	Расширение = УстановленноеРасширение(ИмяМакетаРасширения);
	Если Расширение = Неопределено Тогда
		РезультатОбработки.Ошибка = Истина;
		РезультатОбработки.Сообщение = СтрШаблон(
			НСтр("ru = 'Нельзя удалить расширение макета ""%1"", т.к. расширение в приложении не установлено.'"),
			ИмяМакетаРасширения);
		
		Возврат;
	КонецЕсли;
	
	Расширение.Удалить();
	
КонецПроцедуры

Функция УстановленноеРасширение(ИмяМакетаРасширения)
	
	ОписаниеРасширения = Новый ОписаниеКонфигурации(ПолучитьОбщийМакет(ИмяМакетаРасширения));
	Отбор = Новый Структура("Имя", ОписаниеРасширения.Имя);
	Расширения = РасширенияКонфигурации.Получить(Отбор);
	
	Если Расширения.Количество() > 0 Тогда
		Возврат Расширения[0];
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти