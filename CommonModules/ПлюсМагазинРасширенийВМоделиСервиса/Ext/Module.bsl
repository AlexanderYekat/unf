
#Область СлужебныйПрограммныйИнтерфейс

Процедура НачатьУстановкуМонопольногоРежима(Знач АдресРезультата, Знач СеансРодитель) Экспорт
	
	ИсключаемыеСеансы = Новый Массив();
	ИсключаемыеСеансы.Добавить(СеансРодитель);
	ИсключаемыеСеансы.Добавить(ПолучитьТекущийСеансИнформационнойБазы().НомерСеанса);
	
	ДанныеОтвета = Новый Структура("Успешно, ТекстОшибки", Ложь, "");
	
	Попытка
		ВыполнитьУстановкуМонопольногоРежима(
			Пользователи.ТекущийПользователь(),
			Неопределено,
			ИсключаемыеСеансы,
			Истина,
			Ложь);
		ДанныеОтвета.Успешно = Истина;	
	Исключение
		ДанныеОтвета.Успешно = Ложь;
		ДанныеОтвета.ТекстОшибки = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	ПоместитьВоВременноеХранилище(ДанныеОтвета, АдресРезультата);
	
КонецПроцедуры

Процедура ВыполнитьУстановкуМонопольногоРежима(Знач Ответственный, Знач Токен = Неопределено,
	ИсключаемыеСеансы = Неопределено,
	ЭтоПользователь = Ложь,
	ОжидатьУстановкиМонопольногоДоступа = Истина) Экспорт

	Если МонопольныйРежим() Тогда
		Возврат;
	КонецЕсли;
	
	Если ИсключаемыеСеансы = Неопределено Тогда
		ИсключаемыеСеансы = Новый Массив();
	КонецЕсли;
	
	КоличествоПопытокЗавершенияСеансов = 0;
	КоличествоСекундМеждуПопыткамиЗавершенияСеансов = 30;
	КоличествоСекундМеждуПроверкамиСпискаСеансов = 3;
	МаксимальноеКоличествоПопытокЗавершенияСеансов = 30;
	
	Пока КоличествоПопытокЗавершенияСеансов < МаксимальноеКоличествоПопытокЗавершенияСеансов Цикл
		ВыполнитьЗавершениеСеансовОбласти(Ответственный, ИсключаемыеСеансы);
		ТочкаОтсчета = ТекущаяУниверсальнаяДата();
		КоличествоПопытокЗавершенияСеансов = КоличествоПопытокЗавершенияСеансов + 1;
		
		КонкурирующиеСеансы = СеансыОбласти(Истина, ИсключаемыеСеансы);
		Пока ТекущаяУниверсальнаяДата() - ТочкаОтсчета < КоличествоСекундМеждуПопыткамиЗавершенияСеансов 
			И КонкурирующиеСеансы.Количество() > 0 Цикл
		
			ОбщегоНазначенияБТС.Пауза(КоличествоСекундМеждуПроверкамиСпискаСеансов);
			КонкурирующиеСеансы = СеансыОбласти(Истина, ИсключаемыеСеансы);
		
		КонецЦикла;
		
		Если КонкурирующиеСеансы.Количество() = 0 И ОжидатьУстановкиМонопольногоДоступа Тогда
			Попытка
				УстановитьМонопольныйРежим(Истина);
				Возврат;
			Исключение
				// Сеансы завершаются асинхронно, гарантии возможности монопольного режима нет,
				// поэтому будет пробовать снова, пока не исчерпаем лимит попыток завершения сеансов.
				КонкурирующиеСеансы = СеансыОбласти(Истина, ИсключаемыеСеансы);
			КонецПопытки;
		ИначеЕсли КонкурирующиеСеансы.Количество() = 0 И Не ОжидатьУстановкиМонопольногоДоступа Тогда
			Возврат;
		Иначе
			ОбщегоНазначенияБТС.Пауза(КоличествоСекундМеждуПроверкамиСпискаСеансов);
		КонецЕсли;
	
	КонецЦикла;
	
	Если ОжидатьУстановкиМонопольногоДоступа Тогда	
		ВызватьИсключение НСтр("ru = 'Не удалось установить монопольный режим для установки расширения.'");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьЗавершениеСеансовОбласти(Знач Ответственный, ИсключаемыеСеансы = Неопределено)

	МассивСеансовЗавершения = СеансыОбласти(Истина, ИсключаемыеСеансы);

	Если МассивСеансовЗавершения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ПрограммныйИнтерфейсСервиса.ЗавершитьСеансы(МассивСеансовЗавершения, Ответственный);

КонецПроцедуры

// Сеансы области.
// 
// Параметры:
//  БезТекущегоСеанса - Булево
//  ИсключаемыеСеансы - Массив из Число
// 
// Возвращаемое значение:
//  Массив из Число
Функция СеансыОбласти(Знач БезТекущегоСеанса = Истина, Знач ИсключаемыеСеансы = Неопределено)
	
	Если ИсключаемыеСеансы = Неопределено Тогда
		ИсключаемыеСеансы = Новый Массив;	
	КонецЕсли;
	
	НомерТекущегоСеанса = ПолучитьТекущийСеансИнформационнойБазы().НомерСеанса;

	МассивСеансовОбласти = ПолучитьСеансыИнформационнойБазы();
	МассивСеансовЗавершения = Новый Массив;

	Для Каждого Сеанс Из МассивСеансовОбласти Цикл

		Если Сеанс.НомерСеанса = НомерТекущегоСеанса И БезТекущегоСеанса Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИсключаемыеСеансы.Найти(Сеанс.НомерСеанса) <> Неопределено Тогда
			Продолжить;	
		КонецЕсли;
		
		МассивСеансовЗавершения.Добавить(Сеанс.НомерСеанса);

	КонецЦикла;

	Возврат МассивСеансовЗавершения;

КонецФункции

#КонецОбласти
