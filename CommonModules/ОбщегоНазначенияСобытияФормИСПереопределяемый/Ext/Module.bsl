#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийФормы

// Возникает на сервере при создании формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - создаваемая форма,
//  Отказ - Булево - признак отказа от создания формы,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной обработки.
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	СобытияФормИС.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка, Новый Структура);
	
	КнопкаПодбор = Форма.Элементы.Найти("ТоварыОткрытьПодбор");
	Если КнопкаПодбор = Неопределено Тогда
		КнопкаПодбор = Форма.Элементы.Найти("ТоварыОткрытьПодборНомеклатуры");
	КонецЕсли;
	
	Если КнопкаПодбор <> Неопределено Тогда
		КнопкаПодбор.Видимость = Ложь;
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Документ.ВозвратИзРегистра2ЕГАИС.Форма.ФормаСпискаДокументов" Тогда
		Форма.Элементы.СтраницаКОформлению.Видимость = Ложь;
		Форма.Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ПанельОбменИСМП.Форма.Форма" Тогда
		ЭлементВиды = Форма.Элементы.Найти("ОткрытьВидыНоменклатуры");
		Если ЭлементВиды <> Неопределено Тогда
			ЭлементВиды.Заголовок = НСтр("ru = 'Категории номенклатуры'");
		КонецЕсли;
		КомандаВиды = Форма.Команды.Найти("ОткрытьВидыНоменклатуры");
		Если КомандаВиды <> Неопределено Тогда
			КомандаВиды.Подсказка = СтрЗаменить(КомандаВиды.Подсказка, " виды ", " категории ");
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.МаркировкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		
		// устанавливаем связи параметров выбора для поля "Упаковка" в таблице "Товары"
		Связь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура");
		
		МассивСвязи = Новый Массив();
		МассивСвязи.Добавить(Связь);
		
		ФиксМассивСвязи = Новый ФиксированныйМассив(МассивСвязи);
		Форма.Элементы.ТоварыУпаковка.СвязиПараметровВыбора = ФиксМассивСвязи;
		
		
		// отключаем свойство "ВыбиратьТип"
		Форма.Элементы.ТоварыУпаковка.ВыбиратьТип = Ложь;
		
		// ++( 00-00012169
		// устанавливаем тип значения поля Серия
		//Форма.Элементы.ТоварыСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
		// устанавливаем связи параметров выбора поля Серия
		Форма.Элементы.ТоварыСерия.СвязиПараметровВыбора = ФиксМассивСвязи;
		// )++ 00-00012169
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ВыводИзОборотаИСМП.Форма.ФормаДокумента" Тогда
		
		// устанавливаем связи параметров выбора для поля "Упаковка" в таблице "Товары"
		Связь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура");
		
		МассивСвязи = Новый Массив();
		МассивСвязи.Добавить(Связь);
		
		ФиксМассивСвязи = Новый ФиксированныйМассив(МассивСвязи);
		Форма.Элементы.ТоварыУпаковка.СвязиПараметровВыбора = ФиксМассивСвязи;
		
		// отключаем свойство "ВыбиратьТип"
		Форма.Элементы.ТоварыУпаковка.ВыбиратьТип = Ложь;
		
		// ++( 00-00012169
		// устанавливаем тип значения поля Серия
		Форма.Элементы.ТоварыСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		// )++ 00-00012169
		
	ИначеЕсли Форма.ИмяФормы = "Документ.СписаниеКодовМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		
		// устанавливаем связи параметров выбора для поля "Упаковка" в таблице "Товары"
		Связь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура");
		
		МассивСвязи = Новый Массив();
		МассивСвязи.Добавить(Связь);
		
		ФиксМассивСвязи = Новый ФиксированныйМассив(МассивСвязи);
		Форма.Элементы.ТоварыУпаковка.СвязиПараметровВыбора = ФиксМассивСвязи;
		
		// отключаем свойство "ВыбиратьТип"
		Форма.Элементы.ТоварыУпаковка.ВыбиратьТип = Ложь;
		
		// ++( 00-00012169
		// устанавливаем тип значения поля Серия
		Форма.Элементы.ТоварыСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		// )++ 00-00012169
		
	// ++( 00-00012169
	ИначеЕсли Форма.ИмяФормы = "Документ.ОтгрузкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		
		// устанавливаем тип значения поля Серия
		Форма.Элементы.ТоварыСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
	ИначеЕсли Форма.ИмяФормы = "Документ.УточнениеСведенийОКодахМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		
		// устанавливаем связи параметров выбора для поля "Упаковка" в таблице "Товары"
		Связь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура");
		
		МассивСвязи = Новый Массив();
		МассивСвязи.Добавить(Связь);
		
		ФиксМассивСвязи = Новый ФиксированныйМассив(МассивСвязи);
		Форма.Элементы.ТоварыУпаковка.СвязиПараметровВыбора = ФиксМассивСвязи;
		
		// отключаем свойство "ВыбиратьТип"
		Форма.Элементы.ТоварыУпаковка.ВыбиратьТип = Ложь;
		
		// устанавливаем тип значения поля Серия
		Форма.Элементы.ТоварыСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.ШтрихкодыУпаковокТоваров.Форма.ФормаЭлемента" Тогда
		
		// устанавливаем ограничение типа значения поля Серия
		Форма.Элементы.Серия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
		// устанавливаем связи параметров выбора для поля Серия
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Номенклатура");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Форма.Элементы.Серия.СвязиПараметровВыбора = НовыеСвязи;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ИнвентаризацияПродукцииВЕТИС.Форма.ФормаДокумента" Тогда
		
		// устанавливаем тип значения поля Серия
		Форма.Элементы.ТоварыСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
		// устанавливаем связи параметров выбора для поля Серия
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Форма.Элементы.ТоварыСерия.СвязиПараметровВыбора = НовыеСвязи;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ПроизводственнаяОперацияВЕТИС.Форма.ФормаДокумента" Тогда
		
		// настраиваем Серии в таблице Товары
		
		// устанавливаем тип значения поля Серия
		Форма.Элементы.ТоварыСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
		// устанавливаем связи параметров выбора для поля Серия
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Форма.Элементы.ТоварыСерия.СвязиПараметровВыбора = НовыеСвязи;
		
		// настраиваем Серии в таблице Продукция
		
		// устанавливаем тип значения поля Серия
		Форма.Элементы.СырьеСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
		// устанавливаем связи параметров выбора для поля Серия
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Форма.Элементы.СырьеСерия.СвязиПараметровВыбора = НовыеСвязи;		
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Форма.ФормаДокумента" Тогда
		
		// устанавливаем тип значения поля Серия
		Форма.Элементы.ТоварыСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
		// устанавливаем связи параметров выбора для поля Серия
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Форма.Элементы.ТоварыСерия.СвязиПараметровВыбора = НовыеСвязи;		
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ПроверкаИПодборПродукцииИСМП.Форма.ПроверкаИПодбор" Тогда
		
		// устанавливаем тип значения поля Серия
		Форма.Элементы.ПодобраннаяМаркируемаяПродукцияСерия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
		// устанавливаем связи параметров выбора для поля Серия
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.ПодобраннаяМаркируемаяПродукция.ТекущиеДанные.Номенклатура");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Форма.Элементы.ПодобраннаяМаркируемаяПродукцияСерия.СвязиПараметровВыбора = НовыеСвязи;
		
	ИначеЕсли Форма.ИмяФормы = "ОбщаяФорма.ФормаУточненияДанныхИС" Тогда
		
		// устанавливаем тип значения поля Серия
		Форма.Элементы.Серия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры");
		
		// устанавливаем связи параметров выбора для поля Серия
		НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Номенклатура");
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НоваяСвязь);
		НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
		Форма.Элементы.Серия.СвязиПараметровВыбора = НовыеСвязи;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ПанельАдминистрированияЕГАИС.Форма.НастройкиЕГАИС" Тогда
		
		// Добавим зависимые константы.
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ДополнительныеКонстанты") Тогда
			СтрокаКонстант = Форма.ДополнительныеКонстанты.Добавить();
			СтрокаКонстант.Имя = "ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС";
			СтрокаКонстант.Заголовок = НСтр("ru = 'Выгружать продажи немаркируемой продукции в ЕГАИС'");
			СтрокаКонстант.Описание = НСтр("ru = 'В некоторых случаях выгрузка немаркируемой алкогольной продукции в ЕГАИС может не производиться'");
			
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ПанельАдминистрированияИСМП.Форма.НастройкиИСМП" Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ЕдиницаИзмеренияКилограммИС", "ОграничениеТипа",
			Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения"));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ЕдиницаИзмеренияЛитрИС", "ОграничениеТипа",
			Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения"));
		
	ИначеЕсли Форма.ИмяФормы = "ОбщаяФорма.ФормаНастройкиНоменклатурыИС" Тогда
		
		// устанавливаем связи параметров выбора для поля "Упаковка"
		Связь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Номенклатура");
		
		МассивСвязи = Новый Массив();
		МассивСвязи.Добавить(Связь);
		
		ФиксМассивСвязи = Новый ФиксированныйМассив(МассивСвязи);
		Форма.Элементы.ПотребительскаяУпаковка.СвязиПараметровВыбора = ФиксМассивСвязи;
		
		// отключаем свойство "ВыбиратьТип"
		Форма.Элементы.ПотребительскаяУпаковка.ВыбиратьТип = Ложь;
		Форма.Элементы.ПотребительскаяУпаковка.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения");
		
	ИначеЕсли Форма.ИмяФормы = "РегистрСведений.КегиНаОборудованииРозливаИСМП.Форма.ФормаПодключенияКегаКОборудованию"
		Или Форма.ИмяФормы = "ОбщаяФорма.ПодключенияКегаКОборудованиюРозливаИСМП" Тогда
		
		Если Не ЗначениеЗаполнено(Форма.АдресПодключенияСтрокой) И Форма.Элементы.АдресПодключенияСтрокой.ТолькоПросмотр Тогда
			Форма.Элементы.АдресПодключенияСтрокой.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ПроверкаИПодборТабачнойПродукцииМОТП.Форма.ПроверкаИПодбор"
		ИЛИ Форма.ИмяФормы = "Обработка.ПроверкаИПодборПродукцииИСМП.Форма.ПроверкаИПодбор"
		ИЛИ Форма.ИмяФормы = "Обработка.ПроверкаИПодборАлкогольнойПродукцииЕГАИС.Форма.ПроверкаИПодбор" Тогда
		
		ПроверяемыйДокумент = Форма.ПроверяемыйДокумент;
		
		Если ТипЗнч(ПроверяемыйДокумент) = Тип("ДокументСсылка.ПриемкаТоваровИСМП")
			Или ТипЗнч(ПроверяемыйДокумент) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
			Если УправлениеМобильнымиПриложениями.ИспользоватьОбменСМобильнымиПриложениями() Тогда
				ИмяПланаОбмена = УправлениеМобильнымиПриложениямиКлиентСервер.ИмяПланаОбмена();
				МобильноеПриложение = Справочники.МобильныеПриложения.НайтиПоРеквизиту("ВариантНастройки", "Кладовщик");
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("МобильноеПриложение", МобильноеПриложение);
				Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				|	ОбменСМобильнымиПриложениями.Ссылка КАК Ссылка
				|ИЗ
				|	ПланОбмена." + ИмяПланаОбмена + " КАК ОбменСМобильнымиПриложениями
				|ГДЕ
				|	ОбменСМобильнымиПриложениями.МобильноеПриложение = &МобильноеПриложение
				|	И НЕ ОбменСМобильнымиПриложениями.ЭтотУзел
				|	И НЕ ОбменСМобильнымиПриложениями.ПометкаУдаления";
				
				Результат = Запрос.Выполнить();
				Если Не Результат.Пустой() Тогда
					ИмяКоманды = "ОтправитьРаспоряжениеНаПриемкуКладовщику";
					НоваяКоманда = Форма.Команды.Добавить(ИмяКоманды);
					НоваяКоманда.Действие = "Подключаемый_ВыполнитьПереопределяемуюКоманду";
					НоваяКоманда.Заголовок = НСтр("ru = 'Отправить в 1С:Кладовщик'");
					
					НоваяКнопка = Форма.Элементы.Добавить("ИмяКоманды",
					Тип("КнопкаФормы"), Форма.Элементы.ГруппаМаркированнаяКоманднаяПанель);
					НоваяКнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
					НоваяКнопка.ИмяКоманды = ИмяКоманды;
					
					ДанныеПроверкиИПодбора = Неопределено;
					Если ТипЗнч(ПроверяемыйДокумент) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
						ДанныеПроверкиИПодбора = ПроверяемыйДокумент.ДанныеПроверкиИПодбора.Получить();
					Иначе
						НаборЗаписей = РегистрыСведений.СтатусыПроверкиИПодбораДокументовИСМП.СоздатьНаборЗаписей();
						НаборЗаписей.Отбор.Документ.Установить(ПроверяемыйДокумент);
						НаборЗаписей.Прочитать();
						Для Каждого Запись Из НаборЗаписей Цикл
							ДанныеПроверкиИПодбора = Запись.ДанныеПроверкиИПодбора.Получить();
						КонецЦикла;
					КонецЕсли;
					
					КомандаДоступна = Истина;
					Если ДанныеПроверкиИПодбора <> Неопределено Тогда
						Для Каждого СтрокаДерева Из ДанныеПроверкиИПодбора.ДеревоМаркированнойПродукции.Строки Цикл
							Если НЕ ИнтеграцияИСКлиентСервер.ЭтоУпаковка(СтрокаДерева.ТипУпаковки) Тогда
								Если СтрокаДерева.СтатусПроверки = Перечисления.СтатусыПроверкиНаличияПродукцииИС.Отложена Тогда
									КомандаДоступна = Ложь;
									Прервать;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					Если Не КомандаДоступна Тогда
						НоваяКоманда.Заголовок = НСтр("ru = 'Отправлено в 1С:Кладовщик'");
						КоллекцияЭлементов = Форма.Элементы.ГруппаМаркированнаяКоманднаяПанель.ПодчиненныеЭлементы;
						Для Каждого ЭлементФормы Из КоллекцияЭлементов Цикл
							ЭлементФормы.Доступность = Ложь;
						КонецЦикла;
						Если Форма.Элементы.Найти("ПодобраннаяМаркируемаяПродукцияКоманднаяПанель") <> Неопределено Тогда
							КоллекцияЭлементов = Форма.Элементы.ПодобраннаяМаркируемаяПродукцияКоманднаяПанель.ПодчиненныеЭлементы;
							Для Каждого ЭлементФормы Из КоллекцияЭлементов Цикл
								ЭлементФормы.Доступность = Ложь;
							КонецЦикла;
						КонецЕсли;
						КоллекцияЭлементов = Форма.КоманднаяПанель.ПодчиненныеЭлементы;
						Для Каждого ЭлементФормы Из КоллекцияЭлементов Цикл
							Если ЭлементФормы.Имя = "ДеревоМаркированнойПродукцииНачатьПроверкуЗаново"
								Или ЭлементФормы.Имя = "ФормаСохранитьПромежуточныеРезультатыПроверки" Тогда
								Продолжить;
							КонецЕсли;
							ЭлементФормы.Доступность = Ложь;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при чтении объекта на сервере.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма читаемого объекта,
//  ТекущийОбъект - ДокументОбъект, СправочникОбъект - читаемый объект.
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	СобытияФормИС.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//          См. справочную информацию по событиям управляемой формы.
//  ТекущийОбъект - Произвольный - записанный объект.
//  ПараметрыЗаписи - Структура - использованные параметры записи объекта.
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
	СобытияФормИС.ПослеЗаписиНаСервере(Форма);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
