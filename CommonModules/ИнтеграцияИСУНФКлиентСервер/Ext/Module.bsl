#Область ПрограммныйИнтерфейс

// Определяет, относится ли штрихкод к типам штрихкодов, используемых для маркировки продукции.
//
// Параметры:
//  Штрихкод - Строка - штрихкод для анализа.
//
// Возвращаемое значение:
//  Булево - Признак использования для маркировки.
//
Функция ЭтоМарка(Штрихкод) Экспорт
	
	ТипыМарок = Новый Массив;
	ТипыМарок.Добавить("CODE128");
	ТипыМарок.Добавить("CODE39");
	ТипыМарок.Добавить("EAN128");
	
	ТипШтрихкода = МенеджерОборудованияКлиентСервер.ОпределитьТипШтрихкода(Штрихкод);
	Возврат ТипыМарок.Найти(ТипШтрихкода) <> Неопределено;
	
КонецФункции

#КонецОбласти

#Область ПодключаемыеКомандыИСКлиентСерверПереопределяемый

Процедура ПриОпределенииКоманд(ИмяФормы, Команды) Экспорт
	
	Если ИмяФормы = "Документ.ВходящаяТранспортнаяОперацияВЕТИС.Форма.ФормаДокумента" Тогда
		ИнтеграцияВЕТИСУНФКлиентСервер.КомандыВходящейТранспортнойОперации(Команды);
	ИначеЕсли ИмяФормы = "Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Форма.ФормаДокумента" Тогда
		ИнтеграцияВЕТИСУНФКлиентСервер.КомандыИсходящейТранспортнойОперации(Команды);
	ИначеЕсли ИмяФормы = "Документ.ИнвентаризацияПродукцииВЕТИС.Форма.ФормаДокумента" Тогда
		ИнтеграцияВЕТИСУНФКлиентСервер.КомандыИнвентаризацииПродукции(Команды);
	ИначеЕсли ИмяФормы = "Документ.ПроизводственнаяОперацияВЕТИС.Форма.ФормаДокумента" Тогда
		ИнтеграцияВЕТИСУНФКлиентСервер.КомандыПроизводственнойОперации(Команды);
	// ИСМП.
	ИначеЕсли ИмяФормы = "Документ.ВозвратВОборотИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыВозвратВОборотИСМП(Команды);
	ИначеЕсли ИмяФормы = "Документ.ВыводИзОборотаИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыВыводаИзОборотаИСМП(Команды);
	ИначеЕсли ИмяФормы = "Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыЗаказНаЭмиссиюКодовМаркировкиСУЗ(Команды);
	ИначеЕсли ИмяФормы = "Документ.МаркировкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыМаркировкиТоваровИСМП(Команды);
	ИначеЕсли ИмяФормы = "Документ.СписаниеКодовМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыСписанияКодовМаркировкиИСМП(Команды);
	ИначеЕсли ИмяФормы = "Документ.ПеремаркировкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыПеремаркировкиТоваровИСМП(Команды);
	ИначеЕсли ИмяФормы = "Документ.ОтгрузкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыОтгрузкиТоваровИСМП(Команды);
	ИначеЕсли ИмяФормы = "Документ.ПриемкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыПриемкиТоваровИСМП(Команды);
	ИначеЕсли ИмяФормы = "Документ.УточнениеСведенийОКодахМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.КомандыУточненияСведенийОКодахМаркировкиИСМП(Команды);
	// ЗЕРНО.
	ИначеЕсли ИмяФормы = "Документ.ФормированиеПартийЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.КомандыФормированиеПартийЗЕРНО(Команды);
	ИначеЕсли ИмяФормы = "Документ.ОформлениеСДИЗЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.КомандыОформлениеСДИЗЗЕРНО(Команды);
	ИначеЕсли ИмяФормы = "Документ.ВнесениеСведенийОСобранномУрожаеЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.КомандыВнесениеСведенийОСобранномУрожаеЗЕРНО(Команды);
	ИначеЕсли ИмяФормы = "Документ.СписаниеПартийЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.КомандыСписаниеПартийЗЕРНО(Команды);
	ИначеЕсли ИмяФормы = "Документ.ПогашениеСДИЗЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.КомандыПогашениеСДИЗЗЕРНО(Команды);
	ИначеЕсли ИмяФормы = "Документ.ФормированиеПартийПриПроизводствеЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.КомандыФормированиеПартийПриПроизводствеЗЕРНО(Команды);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриНастройкеВидимостиКоманд(Форма, КомандыОбъекта) Экспорт
	
	ИмяФормы = Форма.ИмяФормы;
	Если ИмяФормы = "Документ.ВходящаяТранспортнаяОперацияВЕТИС.Форма.ФормаДокумента" Тогда
		ИнтеграцияВЕТИСУНФКлиентСервер.УправлениеВидимостьюКомандВходящейТранспортнойОперации(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Форма.ФормаДокумента" Тогда
		ИнтеграцияВЕТИСУНФКлиентСервер.УправлениеВидимостьюКомандИсходящейТранспортнойОперации(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ИнвентаризацияПродукцииВЕТИС.Форма.ФормаДокумента" Тогда
		ИнтеграцияВЕТИСУНФКлиентСервер.УправлениеВидимостьюКомандИнвентаризацииПродукции(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ПроизводственнаяОперацияВЕТИС.Форма.ФормаДокумента" Тогда
		ИнтеграцияВЕТИСУНФКлиентСервер.УправлениеВидимостьюКомандПроизводственнойОперации(Форма, КомандыОбъекта);
	// ИСМП.
	ИначеЕсли ИмяФормы = "Документ.ВозвратВОборотИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандВозвратаВОборот(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ВыводИзОборотаИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандВыводаВОборота(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ЗаказНаЭмиссиюКодовМаркировкиСУЗ.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандЗаказаНаЭмиссию(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.МаркировкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандМаркировкиТоваров(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.СписаниеКодовМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандСписанияКодовМаркировки(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ПеремаркировкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандПеремаркировкиТоваров(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ОтгрузкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандОтгрузкиТоваров(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ПриемкаТоваровИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандПриемкиТоваров(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.УточнениеСведенийОКодахМаркировкиИСМП.Форма.ФормаДокумента" Тогда
		ИнтеграцияИСМПУНФКлиентСервер.УправлениеВидимостьюКомандУточнениеСведенийОКодахМаркировки(Форма, КомандыОбъекта);
	// ЗЕРНО.
	ИначеЕсли ИмяФормы = "Документ.ФормированиеПартийЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.УправлениеВидимостьюКомандФормированиеПартийЗЕРНО(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ОформлениеСДИЗЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.УправлениеВидимостьюКомандОформлениеСДИЗЗЕРНО(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ВнесениеСведенийОСобранномУрожаеЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.УправлениеВидимостьюКомандВнесениеСведенийОСобранномУрожаеЗЕРНО(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.СписаниеПартийЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.УправлениеВидимостьюКомандСписаниеПартийЗЕРНО(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ПогашениеСДИЗЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.УправлениеВидимостьюКомандПогашениеСДИЗЗЕРНО(Форма, КомандыОбъекта);
	ИначеЕсли ИмяФормы = "Документ.ФормированиеПартийПриПроизводствеЗЕРНО.Форма.ФормаДокумента" Тогда
		ИнтеграцияЗЕРНОУНФКлиентСервер.УправлениеВидимостьюКомандФормированиеПартийПриПроизводствеЗЕРНО(Форма, КомандыОбъекта);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет служебные реквизиты в строке таблицы формы.
//
// Параметры:
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - текущие данные редактируемой строки таблицы товаров,
//  СлужебныеРеквизиты - Структура - перечень служебных реквизитов для заполнения.
//
Процедура ЗаполнитьСлужебныеРеквизитыСтроки(Форма, ТекущаяСтрока, СлужебныеРеквизиты) Экспорт
	
	ДанныеСтроки = Новый Структура;
	ДанныеСтроки.Вставить("Номенклатура");
	ДанныеСтроки.Вставить("Характеристика");
	Если СлужебныеРеквизиты.Свойство("КоличествоВБазовыхЕдиницахГосИС")
		ИЛИ СлужебныеРеквизиты.Свойство("КоэффициентЕдиницыИзмеренияГосИС") Тогда
		ДанныеСтроки.Вставить("ЕдиницаИзмерения");
		ДанныеСтроки.Вставить("Количество");
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущаяСтрока);
	
	ИнтеграцияИСУНФВызовСервера.ЗаполнитьСлужебныеРеквизиты(ДанныеСтроки, СлужебныеРеквизиты);
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СлужебныеРеквизиты);
	
КонецПроцедуры

Функция ДанныеСтроки(ТекущаяСтрока, Действие) Экспорт
	
	ДанныеСтроки = Новый Структура;
	
	Если Действие = "ПроверитьСериюРассчитатьСтатус" Тогда
		
		ДанныеСтроки.Вставить("Серия");
		ДанныеСтроки.Вставить("Номенклатура");
		ДанныеСтроки.Вставить("Характеристика");
		
		ДанныеСтроки.Вставить("СтатусУказанияСерий");
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущаяСтрока);
	
	Возврат ДанныеСтроки;
	
КонецФункции

Процедура ЗаполнитьДанныеНастройкиПараметровНоменклатурыИС(Форма, ПользовательРазрешилРедактирование = Ложь) Экспорт
	
	ИмяЭлементаНастройки = "НастройкаПараметровНоменклатурыИС";
	ЭлементФормы         = Форма.Элементы.Найти(ИмяЭлементаНастройки);
	
	Если ЭлементФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПредставления = ИнтеграцияИСКлиентСервер.ПараметрыФормированияДанныхПредставленияНастройкиНоменклатуры();
	ПараметрыПредставления.СсылкаНаОбъект = Форма.Объект.Ссылка;
	ПараметрыПредставления.ВидПродукции = Форма.Объект.ВидПродукцииИС;
	ПараметрыПредставления.ЕстьПравоРедактирования = Форма.РазрешеноРедактированиеНоменклатуры;
	ПараметрыПредставления.РазрешеноРедактированиеРеквизитов = ПользовательРазрешилРедактирование;
	ПараметрыПредставления.ТребуетВзвешивания = Форма.Объект.Весовой;
	ПараметрыПредставления.ДопустимаНастройкаЛогистическойЕдиницы = Ложь;
	ПараметрыПредставления.ПредставлениеВНесколькоСтрок = Ложь;
	
	ДанныеПредставления = ИнтеграцияИСВызовСервера.ПредставлениеНастройкиПараметровНоменклатуры(ПараметрыПредставления);
	
	Если ДанныеПредставления = Неопределено Тогда
		ЭлементФормы.Видимость = Ложь;
	Иначе
		Сдвиг = 0;
		ЧислоСтрок = СтрЧислоСтрок(ДанныеПредставления);
		Для НомерСтроки = 1 По ЧислоСтрок Цикл
			Если СтрДлина(СтрПолучитьСтроку(ДанныеПредставления, НомерСтроки)) >= 80 Тогда
				Сдвиг = Сдвиг + 1;
			КонецЕсли;
		КонецЦикла;
		
		Форма[ИмяЭлементаНастройки] = ДанныеПредставления;
		ЭлементФормы.Видимость = Истина;
		ЭлементФормы.АвтоМаксимальнаяШирина = Ложь;
		ЭлементФормы.Высота = ЧислоСтрок + Сдвиг;
		ЭлементФормы.РастягиватьПоГоризонтали = Ложь;
		ЭлементФормы.Ширина = 50;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти