#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Сформировать печатные формы из отчета
//
// Параметры:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//   КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//   ОбъектыПечати - СписокЗначений
//   ПараметрыВывода - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПерваяПоловинаМесяца = ПризнакПерваяПоловинаМесяца(МассивОбъектов);
	Если ПерваяПоловинаМесяца = Неопределено Тогда
		ПерваяПоловинаМесяца = Ложь;
		СписокДокументов = Новый Массив;
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Печать документов за первую половину месяца и окончального расчета одновременно недоступна'"));
	Иначе
		СписокДокументов = МассивОбъектов;		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, АнализЗарплатыИдентификаторПечатнойФормы());
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = СтрШаблон("ПАРАМЕТРЫ_ПЕЧАТИ_%1",
			АнализЗарплатыИдентификаторПечатнойФормы());
		ПечатнаяФорма.СинонимМакета = АнализЗарплатыПредставление();
		
		СформироватьАнализЗарплаты(ПечатнаяФорма, СписокДокументов, ОбъектыПечати, ПерваяПоловинаМесяца);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, РасчетныйЛистокИдентификаторПечатнойФормы());
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = СтрШаблон("ПАРАМЕТРЫ_ПЕЧАТИ_%1",
			РасчетныйЛистокИдентификаторПечатнойФормы());
		ПечатнаяФорма.СинонимМакета = РасчетныйЛистокПредставление();
		
		СформироватьРасчетныйЛисток(ПечатнаяФорма, СписокДокументов, ОбъектыПечати, ПерваяПоловинаМесяца);
		
	КонецЕсли;
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, РасчетнаяВедомостьИдентификаторПечатнойФормы());
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = СтрШаблон("ПАРАМЕТРЫ_ПЕЧАТИ_%1",
			РасчетнаяВедомостьИдентификаторПечатнойФормы());
		ПечатнаяФорма.СинонимМакета = РасчетнаяВедомостьПредставление();
		
		СформироватьРасчетнуюВедомость(ПечатнаяФорма, СписокДокументов, ОбъектыПечати, ПерваяПоловинаМесяца);
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СписокДокументов, 
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечатиНачислениеЗарплаты(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = АнализЗарплатыИдентификаторПечатнойФормы();
	КомандаПечати.Представление = АнализЗарплатыПредставление();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьДокументовБЗКБ";
	КомандаПечати.Порядок = 1;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = РасчетнаяВедомостьИдентификаторПечатнойФормы();
	КомандаПечати.Представление = РасчетнаяВедомостьПредставление();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьДокументовБЗКБ";
	КомандаПечати.Порядок = 2;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = РасчетныйЛистокИдентификаторПечатнойФормы();
	КомандаПечати.Представление = РасчетныйЛистокПредставление();
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьДокументовБЗКБ";
	КомандаПечати.Порядок = 3;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПризнакПерваяПоловинаМесяца(МассивНачислений)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НачислениеЗарплаты.Ссылка) КАК КоличествоНачислений,
	|	НачислениеЗарплаты.ПерваяПоловинаМесяца КАК ПерваяПоловинаМесяца
	|ИЗ
	|	Документ.НачислениеЗарплаты КАК НачислениеЗарплаты
	|ГДЕ
	|	НачислениеЗарплаты.Ссылка В(&Начисления)
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеЗарплаты.ПерваяПоловинаМесяца";
	
	Запрос.УстановитьПараметр("Начисления", МассивНачислений);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПерваяПоловинаМесяца = Ложь;
	Пока Выборка.Следующий() Цикл
		ПерваяПоловинаМесяца = Выборка.ПерваяПоловинаМесяца;	
	КонецЦикла;
	
	Возврат ПерваяПоловинаМесяца;
	
КонецФункции

#Область РасчетныйЛисток

Процедура СформироватьРасчетныйЛисток(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати, Аванс)

	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;

	Для Каждого ДокументНачисление Из МассивОбъектов Цикл
		РеквизитыНачисления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументНачисление, "Организация, МесяцНачисления");
		МассивФизическихЛиц = ДокументНачисление.ФизическиеЛица.ВыгрузитьКолонку("ФизическоеЛицо");
	
		РасчетныйЛист = УчетНачисленнойЗарплаты.РасчетныйЛистокПоДаннымДокумента(РеквизитыНачисления.Организация,
							МассивФизическихЛиц, РеквизитыНачисления.МесяцНачисления, , , Аванс);
							
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабличныйДокумент.Вывести(РасчетныйЛист);
		
	КонецЦикла;
		
КонецПроцедуры

Функция РасчетныйЛистокИдентификаторПечатнойФормы()
	
	Возврат "РасчетныйЛистокРегл";
	
КонецФункции

Функция РасчетныйЛистокПредставление()
	
	Возврат НСтр("ru = 'Расчетный листок'")
	
КонецФункции

#КонецОбласти

#Область РасчетнаяВедомость

Процедура СформироватьРасчетнуюВедомость(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати, Аванс)

	Если Аванс Тогда
		Отчет = "АнализНачисленийИУдержанийАвансом";
		Вариант = "Т51ПерваяПоловинаМесяца";
	Иначе
		Отчет = "АнализНачисленийИУдержаний";
		Вариант = "Т51";
	КонецЕсли;
	
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб = Истина;
	
	Для Каждого ДокументНачисление Из МассивОбъектов Цикл
		
		РеквизитыНачисления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументНачисление, "Организация, МесяцНачисления");
		СписокФизическихЛиц = Новый СписокЗначений;
		СписокФизическихЛиц.ЗагрузитьЗначения(ДокументНачисление.ФизическиеЛица.ВыгрузитьКолонку("ФизическоеЛицо"));
		
		ОтчетОбъект = Отчеты[Отчет].Создать();
		ОтчетОбъект.ИнициализироватьОтчет();
			
		ВариантОтчета = ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек.Найти(Вариант);
		НастройкиОтчета = ВариантОтчета.Настройки;
			
		ПараметрКомпоновкиДанных = Новый ПараметрКомпоновкиДанных("Период");
		ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновкиДанных);
		Если ЗначениеПараметра <> Неопределено Тогда
			ЗначениеПараметра.Значение = Новый СтандартныйПериод(НачалоМесяца(РеквизитыНачисления.МесяцНачисления), КонецМесяца(РеквизитыНачисления.МесяцНачисления));
			ЗначениеПараметра.Использование = Истина;
		КонецЕсли; 
				
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				НастройкиОтчета.Отбор, "Организация", РеквизитыНачисления.Организация, ВидСравненияКомпоновкиДанных.Равно, , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				НастройкиОтчета.Отбор, "ФизическоеЛицо", СписокФизическихЛиц, ВидСравненияКомпоновкиДанных.ВСписке, , Истина);
				
		ОтчетЗаМесяц = Новый ТабличныйДокумент;
		ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтчета);
		ОтчетОбъект.СкомпоноватьРезультат(ОтчетЗаМесяц);
				
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОтчетЗаМесяц);
	КонецЦикла;	
КонецПроцедуры

Функция РасчетнаяВедомостьИдентификаторПечатнойФормы()
	
	Возврат "ПФ_MXL_Т51";
	
КонецФункции

Функция РасчетнаяВедомостьПредставление()
	
	Возврат НСтр("ru = 'Расчетная ведомость'")
	
КонецФункции

#КонецОбласти

#Область АнализЗарплаты

Процедура СформироватьАнализЗарплаты(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати, Аванс)
	
	Если Аванс Тогда
		Отчет = "АнализНачисленийИУдержанийАвансом";
		Вариант = "АнализЗарплатыПоПодразделениямИСотрудникамПерваяПоловинаМесяца";
	Иначе
		Отчет = "АнализНачисленийИУдержаний";
		Вариант = "АнализЗарплатыПоПодразделениямИСотрудникам";
	КонецЕсли;
	
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб = Истина;
	
	Для Каждого ДокументНачисление Из МассивОбъектов Цикл
		
		РеквизитыНачисления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументНачисление, "Организация, МесяцНачисления");
		СписокФизическихЛиц = Новый СписокЗначений;
		СписокФизическихЛиц.ЗагрузитьЗначения(ДокументНачисление.ФизическиеЛица.ВыгрузитьКолонку("ФизическоеЛицо"));
		
		ОтчетОбъект = Отчеты[Отчет].Создать();
		ОтчетОбъект.ИнициализироватьОтчет();
			
		ВариантОтчета = ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек.Найти(Вариант);
		НастройкиОтчета = ВариантОтчета.Настройки;
			
		ПараметрКомпоновкиДанных = Новый ПараметрКомпоновкиДанных("Период");
		ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновкиДанных);
		Если ЗначениеПараметра <> Неопределено Тогда
			ЗначениеПараметра.Значение = Новый СтандартныйПериод(НачалоМесяца(РеквизитыНачисления.МесяцНачисления), КонецМесяца(РеквизитыНачисления.МесяцНачисления));
			ЗначениеПараметра.Использование = Истина;
		КонецЕсли; 
				
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				НастройкиОтчета.Отбор, "Организация", РеквизитыНачисления.Организация, ВидСравненияКомпоновкиДанных.Равно, , Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				НастройкиОтчета.Отбор, "ФизическоеЛицо", СписокФизическихЛиц, ВидСравненияКомпоновкиДанных.ВСписке, , Истина);
				
		ОтчетЗаМесяц = Новый ТабличныйДокумент;
		ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтчета);
		ОтчетОбъект.СкомпоноватьРезультат(ОтчетЗаМесяц);
				
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОтчетЗаМесяц);
	КонецЦикла;	
КонецПроцедуры

Функция АнализЗарплатыИдентификаторПечатнойФормы()
	
	Возврат "АнализЗарплатыРегл";
	
КонецФункции

Функция АнализЗарплатыПредставление()
	
	Возврат НСтр("ru = 'Анализ зарплаты'")
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли