
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство( "ВариантЗагрузкиДанных", ВариантЗагрузкиДанных);
	Параметры.Свойство( "ИмяИдентификатора", ИмяИдентификатора);
	Параметры.Свойство( "РазмерПорцииЗагрузкиДанных", РазмерПорцииЗагрузкиДанных );
	
	Параметры.Свойство( "СоздатьЭлементыНоменклатуры", СоздатьЭлементыНоменклатуры );
	Параметры.Свойство( "ПерезаполнитьЗначенияРеквизитовНоменклатуры", ПерезаполнитьЗначенияРеквизитовНоменклатуры );
	Параметры.Свойство( "ГруппаДляСозданияНовыхТоваров", ГруппаДляСозданияНовыхТоваров );
	Параметры.Свойство( "СоздатьИерархиюНоменклатуры", СоздатьИерархиюНоменклатуры );
	Параметры.Свойство( "СоздатьХарактеристикиНоменклатуры", СоздатьХарактеристикиНоменклатуры );
	
	Параметры.Свойство( "СоздатьКатегорииНоменклатуры", СоздатьКатегорииНоменклатуры );
	Параметры.Свойство( "СоздатьИерархиюКатегорийНоменклатуры", СоздатьИерархиюКатегорийНоменклатуры );
	
	Параметры.Свойство( "ЗагрузитьЦеныПродажи", ЗагрузитьЦеныПродажи );
	Параметры.Свойство( "ЗаписатьЦеныОтдельнойКомандой",  ЗаписатьЦеныОтдельнойКомандой );
	Параметры.Свойство( "ЗагрузитьИзображения", ЗагрузитьИзображения );
	Параметры.Свойство( "СортироватьСтрокиДереваТоваров", СортироватьСтрокиДереваТоваров );
	
	Параметры.Свойство( "ЗагрузитьОписанияАрхивныхПозиций", ЗагрузитьОписанияАрхивныхПозиций );
	
	Параметры.Свойство( "ДокументУстановкаЦенНоменклатуры", ДокументУстановкаЦенНоменклатуры );
	
	ОграничитьРазмерПорцииЗагрузкиДанных = ЗначениеЗаполнено( РазмерПорцииЗагрузкиДанных );
	Элементы.ЗагрузитьЦеныПродажи.Доступность = ПравоДоступа( "Проведение", Метаданные.Документы.УстановкаЦенНоменклатуры );
	
	Если ВариантЗагрузкиДанных = ИнтеграцияСМаркетплейсомOzonСервер.ВариантЗагрузкиОбновитьСопоставленныеКарточкиТоваров() Тогда
		
		Элементы.ГруппаОграничениеПолученияДанных.Видимость = Ложь;
		ОграничитьРазмерПорцииЗагрузкиДанных = Ложь;
		РазмерПорцииЗагрузкиДанных = 0;
		
		Элементы.ГруппаИмяИдентификатора.Видимость = Ложь;
		Элементы.ГруппаНовыеТовары.Видимость = Ложь;
		Элементы.ГруппаСоздатьИерархиюНоменклатуры.Видимость = Ложь;
		Элементы.ГруппаСоздатьХарактеристикиНоменклатуры.Видимость = Ложь;
		Элементы.ГруппаСоздатьКатегорииНоменклатуры.Видимость = Ложь;
		Элементы.ГруппаПолучитьАрхивныеПозиции.Видимость = Ложь;
		
		ЗагрузитьОписанияАрхивныхПозиций = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОграничитьРазмерПорцииЗагрузкиДанныхПриИзменении(Элемент)
	
	Если ОграничитьРазмерПорцииЗагрузкиДанных Тогда
		Если РазмерПорцииЗагрузкиДанных = 0 Тогда
			РазмерПорцииЗагрузкиДанных = 100;
		КонецЕсли;
		РазмерПорцииЗагрузкиДанных = Макс(1, РазмерПорцииЗагрузкиДанных);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерПорцииЗагрузкиДанныхПриИзменении(Элемент)
	
	Если РазмерПорцииЗагрузкиДанных = 0 Тогда
		ОграничитьРазмерПорцииЗагрузкиДанных = Ложь;
		УстановитьВидимостьДоступность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЦеныПродажиПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Результат = Новый Структура;    
	Результат.Вставить( "ВариантЗагрузкиДанных", ВариантЗагрузкиДанных );
	Результат.Вставить( "ИмяИдентификатора", ИмяИдентификатора );
	Результат.Вставить( "РазмерПорцииЗагрузкиДанных", ?(ОграничитьРазмерПорцииЗагрузкиДанных, РазмерПорцииЗагрузкиДанных, Неопределено));
	
	Результат.Вставить( "СоздатьЭлементыНоменклатуры", СоздатьЭлементыНоменклатуры );
	Результат.Вставить( "ПерезаполнитьЗначенияРеквизитовНоменклатуры", ПерезаполнитьЗначенияРеквизитовНоменклатуры );
	Результат.Вставить( "ГруппаДляСозданияНовыхТоваров", ГруппаДляСозданияНовыхТоваров );
	Результат.Вставить( "СоздатьИерархиюНоменклатуры", СоздатьИерархиюНоменклатуры );
	Результат.Вставить( "СоздатьХарактеристикиНоменклатуры", СоздатьХарактеристикиНоменклатуры );
	
	Результат.Вставить( "СоздатьКатегорииНоменклатуры", СоздатьКатегорииНоменклатуры );
	Результат.Вставить( "СоздатьИерархиюКатегорийНоменклатуры", СоздатьИерархиюКатегорийНоменклатуры );
	
	Результат.Вставить( "ЗагрузитьЦеныПродажи", ЗагрузитьЦеныПродажи );
	Результат.Вставить( "ЗаписатьЦеныОтдельнойКомандой",  ЗаписатьЦеныОтдельнойКомандой );
	Результат.Вставить( "ЗагрузитьИзображения", ЗагрузитьИзображения );
	Результат.Вставить( "СортироватьСтрокиДереваТоваров", СортироватьСтрокиДереваТоваров );

	Результат.Вставить( "ЗагрузитьОписанияАрхивныхПозиций", ЗагрузитьОписанияАрхивныхПозиций );
	
	Результат.Вставить( "ДокументУстановкаЦенНоменклатуры", ДокументУстановкаЦенНоменклатуры );
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Элементы.РазмерПорцииЗагрузкиДанных.Доступность = ОграничитьРазмерПорцииЗагрузкиДанных;
	Элементы.ГруппаЗаписатьЦеныОтдельнойКомандой.Доступность = ЗагрузитьЦеныПродажи;
	
	Элементы.ГруппаДокументУстановкаЦенНоменклатуры.Доступность = ЗагрузитьЦеныПродажи;
	
	Элементы.ГруппаСоздатьЭлементыНоменклатурыДополнительныеНастройки.Доступность = ЭтаФорма.СоздатьЭлементыНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЭлементыНоменклатурыПриИзменении(Элемент)
	Элементы.ГруппаСоздатьЭлементыНоменклатурыДополнительныеНастройки.Доступность = ЭтаФорма.СоздатьЭлементыНоменклатуры;
	
	ЭтаФорма.ПерезаполнитьЗначенияРеквизитовНоменклатуры =ЭтаФорма.СоздатьЭлементыНоменклатуры;
	ЭтаФорма.СоздатьИерархиюНоменклатуры = ЭтаФорма.СоздатьЭлементыНоменклатуры;
	ЭтаФорма.СоздатьХарактеристикиНоменклатуры = ЭтаФорма.СоздатьЭлементыНоменклатуры;
	ЭтаФорма.СоздатьКатегорииНоменклатуры = ЭтаФорма.СоздатьЭлементыНоменклатуры;
	ЭтаФорма.СоздатьИерархиюКатегорийНоменклатуры = ЭтаФорма.СоздатьЭлементыНоменклатуры;
	ЭтаФорма.ЗагрузитьИзображения = ЭтаФорма.СоздатьЭлементыНоменклатуры;

	Элементы.СоздатьИерархиюКатегорийНоменклатуры.Доступность = ЭтаФорма.СоздатьКатегорииНоменклатуры;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКатегорииНоменклатурыПриИзменении(Элемент)
	Элементы.СоздатьИерархиюКатегорийНоменклатуры.Доступность = ЭтаФорма.СоздатьКатегорииНоменклатуры;

	ЭтаФорма.СоздатьИерархиюКатегорийНоменклатуры = ЭтаФорма.СоздатьКатегорииНоменклатуры;
КонецПроцедуры

#КонецОбласти
