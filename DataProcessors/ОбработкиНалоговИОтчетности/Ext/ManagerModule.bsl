
Функция ПолучитьСобытиеКалендаряПоВносамИПДоходы(Период, ВзносСДоходов = Ложь) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КалендарьПодготовкиОтчетности.Ссылка КАК Ссылка,
		|	КалендарьПодготовкиОтчетности.ДатаОкончанияДокументов КАК ДатаОкончанияДокументов,
		|	КалендарьПодготовкиОтчетности.ДатаОкончанияСобытия КАК ДатаОкончанияСобытия
		|ИЗ
		|	Справочник.КалендарьПодготовкиОтчетности КАК КалендарьПодготовкиОтчетности
		|ГДЕ
		|	КалендарьПодготовкиОтчетности.Задача = &Задача
		|	И КалендарьПодготовкиОтчетности.ПометкаУдаления = ЛОЖЬ
		|	И КалендарьПодготовкиОтчетности.ДатаОкончанияДокументов >= &ДатаОкончанияДокументов
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОкончанияДокументов";
	
	Запрос.УстановитьПараметр("ДатаОкончанияДокументов", НачалоДня(НачалоМесяца(Период)));
	
	Если ВзносСДоходов Тогда
		Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.СтраховыеВзносыПриДоходахСвыше300ТР;
	Иначе
		Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.СтраховыеВзносыИП;
	КонецЕсли;  	
		
	Запрос.УстановитьПараметр("Задача", Задача);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Справочники.КалендарьПодготовкиОтчетности.ПустаяСсылка();
	
КонецФункции    
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура УточнитьСрокУплатыВзносовЕдиныйТариф(СрокУплаты) Экспорт
	
	Если Не ЗначениеЗаполнено(СрокУплаты) Тогда
		Возврат;
	КонецЕсли;  
	
	СрокУплаты = СрокУплатыНалогаВБюджет(Год(СрокУплаты), 12, 31);
	
КонецПроцедуры         

Процедура УточнитьСрокУплатыВзносовСвышеПредела(СрокУплаты) Экспорт
	
	Если Не ЗначениеЗаполнено(СрокУплаты) Тогда
		Возврат;
	КонецЕсли;
	
	Если КонецМесяца(СрокУплаты) = КонецГода(СрокУплаты)
		Или КонецМесяца(СрокУплаты) = КонецКвартала(СрокУплаты) Тогда
		СрокУплаты = СрокУплатыНалогаВБюджет(Год(СрокУплаты) + 1, 7, 1);
	КонецЕсли;
	
КонецПроцедуры

Функция СрокУплатыНалогаВБюджет(ГодУплаты, МесяцУплаты, ДеньУплаты) Экспорт
	
	ДатаУплатыНалога = Дата(ГодУплаты, МесяцУплаты, ДеньУплаты);
		
	// Перенесем на рабочие дни
	ПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
		
	Если Не ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда
		Возврат КонецДня(ДатаУплатыНалога);
	КонецЕсли; 
		
	ИсходныеДаты = Новый Массив;
	ИсходныеДаты.Добавить(ДатаУплатыНалога);
		
	ГрафикПереноса = КалендарныеГрафики.ДатыБлижайшихРабочихДней(
		ПроизводственныйКалендарь, 
		ИсходныеДаты,
		Ложь,
		Ложь,
		Истина);
	
	ДатаПереноса = ?(ЗначениеЗаполнено(ГрафикПереноса[ДатаУплатыНалога]), 
		ГрафикПереноса[ДатаУплатыНалога], ДатаУплатыНалога);
	
	Возврат КонецДня(ДатаПереноса);
	
КонецФункции

Функция СозданныеДокументыОтраженияНаЕНС(Организация, Период, ВзносСДоходов = Ложь, ЗаписьКалендаря) Экспорт
	
	ТипыДокументов = Новый Массив;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ЗаявлениеОЗачетеВСчетПредстоящейОбязанности"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ОперацияПоЕдиномуНалоговомуСчету"));
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Уведомление", Новый ОписаниеТипов(ТипыДокументов));
	Результат.Колонки.Добавить("Дата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	Результат.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	// При упрощенном порядке показываем справочно в переходном периоде заявления, которые были созданы ранее в налоговом периоде
	УпрощенныйЗачетВзносов = РегламентированнаяОтчетностьУСН.УпрощенныйЗачетФиксированныхВзносов(Организация, Период);
	
	Если УпрощенныйЗачетВзносов Тогда
		
		Если ВзносСДоходов Тогда   
			ВидНалога = Перечисления.ВидыНалогов.ФиксированныеВзносы_СвышеПредела;
		Иначе
			ВидНалога = Перечисления.ВидыНалогов.ФиксированныеВзносы_СтраховыеВзносыЕдиныйТариф;
		КонецЕсли; 	
		
		Если ВидНалога = Перечисления.ВидыНалогов.ФиксированныеВзносы_СвышеПредела Тогда
			НалоговыйПериод = НачалоГода(НачалоГода(Период) - 1);
		Иначе
			НалоговыйПериод = НачалоГода(Период);
		КонецЕсли;
		
		ЗачтенныеРанееСуммыВзносов = ЕдиныйНалоговыйСчет.ЗачтенныеУплатыНалоговПоДокументамЗаПериод(
		Организация,
		НалоговыйПериод,
		Период,
		ВидНалога);
		ЗачтенныеРанееСуммыВзносов.Свернуть("Уведомление, Дата, Сумма");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ЗачтенныеРанееСуммыВзносов, Результат);
	КонецЕсли;
	
	ПериодСобытия = НачалоДня(Период);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(
	ЕдиныйНалоговыйСчет.ДанныеДляУведомлений(ЗаписьКалендаря, Организация, ПериодСобытия),
	Результат);  
	
	Возврат Результат;
	
КонецФункции

Функция ПроверитьОбновитьНачислениеНалогаПоДоходамУСНПСН(Организация) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстаткиИОбороты.СуммаПриход КАК СуммаПриход,
		|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстаткиИОбороты.Организация КАК Организация,
		|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстаткиИОбороты.Налог КАК Налог,
		|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстаткиИОбороты.Период КАК Период,
		|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстаткиИОбороты.СрокУплаты КАК СрокУплаты
		|ИЗ
		|	РегистрНакопления.РасчетыПоНалогамНаЕдиномНалоговомСчете.ОстаткиИОбороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Квартал,
		|			,
		|			Налог В (&ВидыНалога)
		|				И Организация = &Организация) КАК РасчетыПоНалогамНаЕдиномНалоговомСчетеОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", '20240101');
	Запрос.УстановитьПараметр("ДатаОкончания", '20240502');
	ВидыНалога = Новый Массив; 
	ВидыНалога.Добавить(Справочники.ВидыНалогов.АвансовыйПлатежПриУСН);
	ВидыНалога.Добавить(Справочники.ВидыНалогов.АвансовыйПлатежПриУСНРасходы); 
	Запрос.УстановитьПараметр("ВидыНалога", ВидыНалога);
	Запрос.УстановитьПараметр("Организация", Организация);

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НачисленияКРегистрации = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДокументНачисление = НайтиСоздатьДокументНачислениеУСНДоходы(ВыборкаДетальныеЗаписи.Организация, ВыборкаДетальныеЗаписи.СуммаПриход, ВидыНалога);
		
		Если ДокументНачисление = Ложь Тогда
			Продолжить;
		Иначе   
			СтруктураРасчета = Новый Структура;
			СтруктураРасчета.Вставить("Организация", ВыборкаДетальныеЗаписи.Организация);
			СтруктураРасчета.Вставить("ВидВзаиморасчетовСБюджетом", ВыборкаДетальныеЗаписи.Налог);
			СтруктураРасчета.Вставить("СобытиеКалендаря", ПолучитьСобытиеКалендаряИПДоходыУСН(КонецКвартала('20240101'))); 
			СтруктураРасчета.Вставить("СуммаВзаиморасчетовСБюджетом", ВыборкаДетальныеЗаписи.СуммаПриход);  
			СтруктураРасчета.Вставить("СуммаНачисления", ДокументНачисление);
			СтруктураРасчета.Вставить("ПериодОтчетности", СтруктураРасчета.СобытиеКалендаря.ДатаДокументаОбработкиСобытия);
			СтруктураРасчета.Вставить("ДокументВзаиморасчетовСБюджетом", Документы.НачислениеНалогов.ПустаяСсылка());
			
			НачисленияКРегистрации.Добавить(СтруктураРасчета);
		КонецЕсли;
		
	КонецЦикла;  
	
	Возврат НачисленияКРегистрации;
	
КонецФункции 

Функция ПолучитьСобытиеКалендаряИПДоходыУСН(Период) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КалендарьПодготовкиОтчетности.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КалендарьПодготовкиОтчетности КАК КалендарьПодготовкиОтчетности
		|ГДЕ
		|	КалендарьПодготовкиОтчетности.Задача = &Задача
		|	И КалендарьПодготовкиОтчетности.ДатаОкончанияСобытия > &ДатаОкончанияСобытия
		|	И КалендарьПодготовкиОтчетности.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	КалендарьПодготовкиОтчетности.ДатаОкончанияСобытия";
	
	Запрос.УстановитьПараметр("ДатаОкончанияСобытия", '20240101');
	Задача = Справочники.ЗадачиКалендаряПодготовкиОтчетности.АвансовыйПлатежПоУСН;     	
		
	Запрос.УстановитьПараметр("Задача", Задача);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Справочники.КалендарьПодготовкиОтчетности.ПустаяСсылка();
	
КонецФункции


Функция НайтиСоздатьДокументНачислениеУСНДоходы(Организация, Сумма, ВидыНалога) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетыПоНалогамОстаткиИОбороты.СуммаПриход КАК СуммаПриход
		|ИЗ
		|	РегистрНакопления.РасчетыПоНалогам.ОстаткиИОбороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Регистратор,
		|			,
		|			Организация = &Организация
		|				И ВидНалога В (&ВидыНалога)) КАК РасчетыПоНалогамОстаткиИОбороты
		|ГДЕ
		|	РасчетыПоНалогамОстаткиИОбороты.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РасчетыПоНалогамОстаткиИОбороты.Организация = &Организация";
	
	Запрос.УстановитьПараметр("ВидыНалога", ВидыНалога);
	Запрос.УстановитьПараметр("ДатаНачала", '20240101');
	Запрос.УстановитьПараметр("ДатаОкончания", '20240502');
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.СуммаПриход = Сумма Тогда
			Возврат Ложь;
		Иначе
			Возврат ВыборкаДетальныеЗаписи.СуммаПриход;		
		КонецЕсли;  		
		
	КонецЦикла; 
	
	Возврат "нет";
	
КонецФункции
#КонецЕсли