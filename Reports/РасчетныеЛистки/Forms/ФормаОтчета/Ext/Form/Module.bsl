
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодРегистрации 				= НачалоМесяца(ТекущаяДата());
	ОтображениеПериодаРегистрации 	= Формат(ПериодРегистрации, "ДФ='MMMM yyyy'");
	
	Если Константы.УчетПоКомпании.Получить() Тогда
		
		Организация = Справочники.Организации.ОрганизацияКомпания();
		Элементы.Организация.Видимость = Ложь;
		
	Иначе
		
		Организация 				= Константы.УчетПоКомпании.Компания(Справочники.Организации.ОрганизацияПоУмолчанию());
		
	КонецЕсли;
	
	Валюта 							= Константы.ВалютаУчета.Получить();

	Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить() Тогда
		
		Подразделение = Справочники.СтруктурныеЕдиницы.ОсновноеПодразделение;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы ОбработкаВыбора
//
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
		И СтрНайти(ИсточникВыбора.ИмяФормы, "ФормаКалендаря") > 0 Тогда
		
		ПериодРегистрации = КонецДня(ВыбранноеЗначение);
		ЗарплатаИПерсоналКлиент.ПриИзмененииПериодаРегистрации(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

&НаКлиенте
// Процедура - обработчик события Регулирования реквизита ПериодРегистрации.
//
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаИПерсоналКлиент.ПриРегулированииПериодаРегистрации(ЭтотОбъект, Направление);
	ЗарплатаИПерсоналКлиент.ПриИзмененииПериодаРегистрации(ЭтотОбъект);
	
КонецПроцедуры //ПериодРегистрацииРегулирование()

&НаКлиенте
// Процедура - обработчик события НачалоВыбора реквизита ПериодРегистрации.
//
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДатаКалендаряПриОткрытии = ?(ЗначениеЗаполнено(ПериодРегистрации), ПериодРегистрации,
		УправлениеНебольшойФирмойПовтИсп.ПолучитьТекущуюДатаСеанса());
	
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ДатаКалендаряПриОткрытии = ПериодРегистрации;
	Иначе
		ДатаКалендаряПриОткрытии = ОбщегоНазначенияКлиент.ДатаСеанса();
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ФормаКалендаря", ОбщегоНазначенияУНФКлиент.ПараметрыОткрытияФормыКалендаря(
		ДатаКалендаряПриОткрытии), ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура - обработчик команды Сформировать.
//
Процедура Сформировать(Команда)
	
	СформироватьВыполнить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
// Процедура формирует отчет.
//
Процедура СформироватьВыполнить()
	
	Если Константы.ИспользоватьНесколькоОрганизаций.Получить() И НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбрана организация.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Отчет, "Организация");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран период регистрации.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Отчет, "ПериодРегистрации");
		Возврат;
	КонецЕсли;
	
	Если НЕ Константы.ФункциональнаяУчетВалютныхОпераций.Получить() И НЕ ЗначениеЗаполнено(Валюта) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбрана валюта.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Отчет, "Валюта");
		Возврат;
	КонецЕсли;
	
	ДокументРезультат = Отчеты.РасчетныеЛистки.СформироватьОтчет(Организация, Подразделение, ПериодРегистрации, Валюта, Сотрудник);
	Если ДокументРезультат = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Нет данных для формирования отчета.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ДокументРезультат);
	
КонецПроцедуры // Сформировать()

#КонецОбласти
