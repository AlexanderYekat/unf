
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодРегистрации = НачалоМесяца(ТекущаяДата());
	
	Организация = Константы.УчетПоКомпании.Компания(Справочники.Организации.ОрганизацияПоУмолчанию());
	Валюта = Константы.ВалютаУчета.Получить();

	Если НЕ Константы.ФункциональнаяОпцияУчетПоНесколькимПодразделениям.Получить() Тогда
		
		Подразделение = Справочники.СтруктурныеЕдиницы.ОсновноеПодразделение;
		
	КонецЕсли;	
	
	Если Параметры.Свойство("ПараметрКоманды") И ТипЗнч(Параметры.ПараметрКоманды) = Тип("ДокументСсылка.НачислениеЗарплатыУНФ") Тогда
		
		НачислениеЗарплаты = Параметры.ПараметрКоманды;
		Элементы.НачислениеЗарплаты.Видимость = Истина;
		
		РеквизитыДокумента =  ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НачислениеЗарплаты,
			"Организация, ПериодРегистрации, СтруктурнаяЕдиница, ВалютаДокумента");
		Если НЕ Константы.УчетПоКомпании.Получить() Тогда
			Организация = РеквизитыДокумента.Организация;
        КонецЕсли;
		ПериодРегистрации = РеквизитыДокумента.ПериодРегистрации;
		Подразделение = РеквизитыДокумента.СтруктурнаяЕдиница;
		Валюта = РеквизитыДокумента.ВалютаДокумента;
		СформироватьВыполнить();
		
	КонецЕсли;
	
	ОтображениеПериодаРегистрации = Формат(ПериодРегистрации, "ДФ='MMMM yyyy'");
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	ВариантыОтчетов.ПриСохраненииПользовательскихНастроекНаСервере(ЭтотОбъект, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ДатаКалендаряПриОткрытии = ПериодРегистрации;
	Иначе
		ДатаКалендаряПриОткрытии = ОбщегоНазначенияКлиент.ДатаСеанса();
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ФормаКалендаря", ОбщегоНазначенияУНФКлиент.ПараметрыОткрытияФормыКалендаря(
		ДатаКалендаряПриОткрытии), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойКлиент.ПриРегулированииПериодаРегистрации(ЭтотОбъект, Направление);
	УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПериодРегистрации = ВыбранноеЗначение;
	УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьВыполнить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьВыполнить()
	
	Если Константы.ИспользоватьНесколькоОрганизаций.Получить() И НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбрана организация.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Отчет, "Организация");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран период регистрации.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Отчет, "ПериодРегистрации");
		Возврат;
	КонецЕсли;
	
	Если НЕ Константы.ФункциональнаяУчетВалютныхОпераций.Получить() И НЕ ЗначениеЗаполнено(Валюта) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбрана валюта.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Отчет, "Валюта");
		Возврат;
	КонецЕсли;
	
	ДокументРезультат = Отчеты.РасчетнаяВедомость.СформироватьОтчет(Организация, Подразделение, ПериодРегистрации, Валюта, Неопределено);
	
	Если ДокументРезультат = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Нет данных для формирования отчета.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 
	
	ТабличныйДокумент = ДокументРезультат;
	
КонецПроцедуры // Сформировать()

#КонецОбласти
