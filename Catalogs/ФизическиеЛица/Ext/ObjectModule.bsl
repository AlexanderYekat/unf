#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		
		НаборЗаписейФИО = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
		                      |	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		                      |	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
		                      |ИЗ
		                      |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних");
							  
		Запрос.УстановитьПараметр("ФизЛицо", Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		
		// набор уже записан
		Если Не РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		ФИО = Наименование;
		
		ЗаписьНабора = НаборЗаписейФИО.Добавить();
		ЗаписьНабора.Период = ?(ЗначениеЗаполнено(ДатаРождения), ДатаРождения, '19000101');
		Если ЗначениеЗаполнено(Фамилия + Имя) Тогда
			ЗаписьНабора.Фамилия = Фамилия;
			ЗаписьНабора.Имя = Имя;
			ЗаписьНабора.Отчество = Отчество;
		Иначе
			СтруктураФИО = Справочники.ФизическиеЛица.ПолучитьСтруктуруФИОПоИмени(ФИО);
			ЗаполнитьЗначенияСвойств(ЗаписьНабора, СтруктураФИО, "Фамилия, Имя, Отчество");
		КонецЕсли;
		
		Если НаборЗаписейФИО.Количество() > 0 И ЗначениеЗаполнено(НаборЗаписейФИО[0].Период) Тогда
			
			НаборЗаписейФИО[0].ФизическоеЛицо = Ссылка;
			
			НаборЗаписейФИО.Отбор.ФизическоеЛицо.Использование = Истина;
			НаборЗаписейФИО.Отбор.ФизическоеЛицо.Значение = НаборЗаписейФИО[0].ФизическоеЛицо;
			НаборЗаписейФИО.Отбор.Период.Использование = Истина;
			НаборЗаписейФИО.Отбор.Период.Значение = НаборЗаписейФИО[0].Период;
			Если Не ЗначениеЗаполнено(ЗаписьНабора.Фамилия + ЗаписьНабора.Имя + ЗаписьНабора.Отчество) Тогда
				ЗаписьНабора.Фамилия = Фамилия;
				ЗаписьНабора.Имя = Имя;
				ЗаписьНабора.Отчество = Отчество;
			КонецЕсли;
			
			НаборЗаписейФИО.Записать(Истина);
			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	ЗаполнениеОбъектовУНФ.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ФИО");
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		ФИО = Наименование;
	КонецЕсли;
	
	ЗаполнитьЧастиИмени();
	ЗаполнитьИнициалы();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьЧастиИмени()
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ФИОУстановлены") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСреза = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(, Новый Структура("ФизическоеЛицо", Ссылка));
	
	Если ДанныеСреза.Количество() > 0 И Не ПустаяСтрока(ДанныеСреза[0].Фамилия) Тогда
		ЧастиИмени = ДанныеСреза[0];
	Иначе
		ЧастиИмени = Справочники.ФизическиеЛица.ПолучитьСтруктуруФИОПоИмени(ФИО);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЧастиИмени, "Фамилия,Имя,Отчество");
	
КонецПроцедуры

Процедура ЗаполнитьИнициалы()
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Инициалы) Тогда
		
		Если Не ПустаяСтрока(Имя) Тогда
			Инициалы = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ИнициалыПоИмениОтчеству(Имя, Отчество);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли