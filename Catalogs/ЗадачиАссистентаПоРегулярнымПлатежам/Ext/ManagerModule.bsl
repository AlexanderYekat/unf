#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает Истина, если есть включенные задачи по напоминаниям о показателях
//
// Возвращаемое значение:
//  Булево - Истина, если есть задачи по заданному виду оповещения.
//
Функция ЕстьЗадачиВРаботе() Экспорт
	
	Задача = Справочники.ЗадачиАссистентаПоРегулярнымПлатежам.ЗадачаПоРегулярнымПлатежамОсновная;
	Возврат Задача.Используется;
	
КонецФункции

#Область ОбновлениеВерсииИБ

// Определяет настройки начального заполнения элементов.
//
// Параметры:
//  Настройки - Структура - настройки заполнения
//   * ПриНачальномЗаполненииЭлемента - Булево - Если Истина, то для каждого элемента будет
//      вызвана процедура индивидуального заполнения ПриНачальномЗаполненииЭлемента.
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
// 
// Параметры:
//   КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//   Элементы - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//   ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлемента
//
// Параметры:
//  Объект                  - СправочникОбъект.ВидыКонтактнойИнформации - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПередНачаломВыполненияЗадач(НовыеЗадачиКВыполнению) Экспорт
	
КонецПроцедуры

Процедура ПередЗаписьюПредметаЗадачи(ПредметОбъект) Экспорт
	
КонецПроцедуры

Процедура ПриЗаписиПредметаЗадачи(ПредметОбъект) Экспорт
	
КонецПроцедуры

Процедура ОбработкаПроведенияПредметаЗадачи(ПредметОбъект) Экспорт
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведенияПредметаЗадачи(ПредметОбъект) Экспорт
	
КонецПроцедуры

Процедура ЗапланироватьЗадачиКВыполнению(НовыеЗадачиКВыполнению, ВыбранныеЗадачиАссистента) Экспорт
	
	ВремяОтправленияЗадач = ВремяОтправленияНовыхЗадач();
	
	Для каждого ЗадачаАссистента Из ВыбранныеЗадачиАссистента Цикл
		НоваяЗадача = НовыеЗадачиКВыполнению.Добавить();
		НоваяЗадача.Дата = ВремяОтправленияЗадач;
		НоваяЗадача.Задача = ЗадачаАссистента;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПоприветствоватьПользователяПриЗаписиПервыхЗадач(ЗадачиАссистента) Экспорт
	
	АссистентПодключен = АссистентУправления.Подключен();
	Если Не АссистентПодключен Тогда
		АссистентУправления.Подключить();
	КонецЕсли;
	
	Для каждого ЗадачаАссистента Из ЗадачиАссистента Цикл
		ЗадачаОбъект = ЗадачаАссистента.ПолучитьОбъект();
		ЗадачаОбъект.ПоприветствоватьПользователяПередПервымВыполнением();
	КонецЦикла;
	
КонецПроцедуры

Функция ВремяОтправленияЗадач() Экспорт
	
	ВремяОтправления = 0;
	
	Возврат ВремяОтправления;
	
КонецФункции

Функция ПериодичностьОтправленияЗадач() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗадачиАссистентаПоРегулярнымПлатежам.ПериодичностьОтправки КАК ПериодичностьОтправки
	|ИЗ
	|	Справочник.ЗадачиАссистентаПоРегулярнымПлатежам КАК ЗадачиАссистентаПоРегулярнымПлатежам";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеЗадачи = Результат.Выбрать();
	ДанныеЗадачи.Следующий();
	Возврат ДанныеЗадачи.ПериодичностьОтправки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВремяОтправленияНовыхЗадач()

	СекундВЧасе = 3600;
	СекундВСутках = 86400;
	СекундВНеделе = 604800;
	СекундВ12Часах = 43200;
	ВремяОтправленияЗадач = ВремяОтправленияЗадач();
	
	Возврат НачалоДня(ТекущаяДатаСеанса()) + СекундВСутках + ВремяОтправленияЗадач * СекундВЧасе;

КонецФункции

#КонецОбласти

#КонецЕсли