#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Автор) Тогда
		Автор = Пользователи.АвторизованныйПользователь();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПериодичностьОтправки) Тогда
		ПериодичностьОтправки = Перечисления.ПериодичностиРасписанийРассылокОтчетов.Ежедневно;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = Ложь;
	ДополнительныеСвойства.Свойство("ЭтоНовый", ЭтоНовый);
	
	АссистентУправления.УдалитьЗапланированныеЗаписиЗадачи(Ссылка);
	ЗапланироватьНовыеЗадачи();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПередВыполнениемЗадачи(Предмет, Источник, ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
		
КонецПроцедуры

Процедура ВыполнитьЗадачу(Предмет, Источник, ПараметрыВыполнения, ДополнительныеПараметры) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРегулярныеПлатежи") Тогда
		Возврат;
	КонецЕсли;
	
	АктуальныеРегулярныеПлатежи = АктуальныеРегулярныеПлатежи();
	
	ПараметрыРегулярныхПлатежейСвернуто = АктуальныеРегулярныеПлатежи.Скопировать();
	ПараметрыРегулярныхПлатежейСвернуто.Свернуть("Идентификатор, ИдентификаторОбщегоОбсуждения, ПользовательДляОповещения,
		|СпособОповещения, УчетнаяЗапись, АвтоматическиСоздаватьРегулярныйПлатеж");
	ПараметрыРегулярныхПлатежейСвернуто.Колонки.Добавить("ЭтоОтправкаСообщенияОбсуждения");
	ПараметрыРегулярныхПлатежейСвернуто.Колонки.Добавить("ЭтоОтправкаEmail");
	
	ЕстьОшибки = Ложь;

	Для Каждого СтрокаРегулярногоПлатежа Из ПараметрыРегулярныхПлатежейСвернуто Цикл
		
		СтрокаРегулярногоПлатежа.ЭтоОтправкаСообщенияОбсуждения = ЭтоОтправкаСообщенияОбсуждения(СтрокаРегулярногоПлатежа);
		СтрокаРегулярногоПлатежа.ЭтоОтправкаEmail = ЭтоОтправкаEmail(СтрокаРегулярногоПлатежа);
		
		Если Не СтрокаРегулярногоПлатежа.ЭтоОтправкаEmail И Не СтрокаРегулярногоПлатежа.ЭтоОтправкаСообщенияОбсуждения Тогда
			ТекстОшибки = НСтр("ru='Не заполнен ни адрес электронной почты, ни обсуждение для отправки сообщения.'");
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
	КонецЦикла;	

	ПараметрыОтбора = Новый Структура("Идентификатор, ИдентификаторОбщегоОбсуждения, ПользовательДляОповещения,
		|СпособОповещения, УчетнаяЗапись, АвтоматическиСоздаватьРегулярныйПлатеж");
	
	Для Каждого СтрокаАктуальногоРегулярногоПлатежа Из АктуальныеРегулярныеПлатежи Цикл

		АвтоматическиСоздаватьПлатеж = СтрокаАктуальногоРегулярногоПлатежа.АвтоматическиСоздаватьРегулярныйПлатеж;
		Если АвтоматическиСоздаватьПлатеж Тогда
			НовыйДокумент = СтрокаАктуальногоРегулярногоПлатежа.ИсходныйДокумент.Скопировать();
			НовыйДокумент.Дата = ТекущаяДатаСеанса();
			НовыйДокумент.ДополнительныеСвойства.Вставить("ЭтоЗаписьАссистентом", Истина);
			НовыйДокумент.Записать();
			
			РегистрыСведений.РегулярныеПлатежиГрафик.УдалитьЗаписьИзГрафика(СтрокаАктуальногоРегулярногоПлатежа.ИсходныйДокумент,
				СтрокаАктуальногоРегулярногоПлатежа.Дата);
				
			ТекстСообщения = ТекстСообщенияРегулярныйПлатежСоздан(СтрокаРегулярногоПлатежа.ЭтоОтправкаEmail);
		Иначе
			ТекстСообщения = ТекстСообщенияНапоминаниеОРегулярныхПлатежах(СтрокаРегулярногоПлатежа.ЭтоОтправкаEmail);
		КонецЕсли;

		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СтрокаАктуальногоРегулярногоПлатежа);
		СтрокиРегулярныхПлатежей = ПараметрыРегулярныхПлатежейСвернуто.НайтиСтроки(ПараметрыОтбора);
		Если СтрокиРегулярныхПлатежей.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРегулярногоПлатежа = СтрокиРегулярныхПлатежей[0];
		
		Если СтрокаРегулярногоПлатежа.ЭтоОтправкаEmail Тогда
			СоздатьEmail(СтрокаРегулярногоПлатежа, ТекстСообщения);
		Иначе
			ДанныеСообщения = ОбсужденияУНФ.НовыйДанныеСообщения();
			ДанныеСообщения.Текст = ТекстСообщения;
			ДобавитьКнопкуДействияДляСообщения(АвтоматическиСоздаватьПлатеж, ДанныеСообщения.Действия);
			СоздатьСообщениеОбсуждения(СтрокаРегулярногоПлатежа, ДанныеСообщения);
		КонецЕсли;
		
		ПараметрыРегулярныхПлатежейСвернуто.Удалить(СтрокаРегулярногоПлатежа);
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПослеВыполненияЗадачи(Предмет, Источник, ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
	Если НеобходимоПоприветствовать Тогда
		СброситьПризнакНеобходимоПоприветствовать();
	КонецЕсли;
	ЗапланироватьНовыеЗадачи();
	
КонецПроцедуры

Процедура ПоприветствоватьПользователяПередПервымВыполнением() Экспорт
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Используется Тогда
		Возврат;
	КонецЕсли;
	
	Если АссистентУправления.Подключен() Тогда 

		ПараметрыРегулярныхПлатежейСвернуто = ПараметрыРегулярныхПлатежей.Выгрузить();
		ПараметрыРегулярныхПлатежейСвернуто.Свернуть("Идентификатор, ИдентификаторОбщегоОбсуждения, ПользовательДляОповещения,
		|СпособОповещения, УчетнаяЗапись");
		
		Для Каждого СтрокаРегулярногоПлатежа Из ПараметрыРегулярныхПлатежейСвернуто Цикл
			
			ЭтоОтправкаСообщенияОбсуждения = ЭтоОтправкаСообщенияОбсуждения(СтрокаРегулярногоПлатежа);
			ЭтоОтправкаEmail = ЭтоОтправкаEmail(СтрокаРегулярногоПлатежа);
			
			Если Не ЭтоОтправкаEmail И Не ЭтоОтправкаСообщенияОбсуждения Тогда
				ТекстОшибки = НСтр("ru='Не заполнен ни адрес электронной почты, ни обсуждение для отправки сообщения.'");
				ВызватьИсключение ТекстОшибки;
			КонецЕсли;
			
			ДанныеСообщения = ОбсужденияУНФ.НовыйДанныеСообщения();
			ДанныеСообщения.Текст = ТекстСообщенияПриветствиеПередПервымВыполнением();
			ДанныеСообщения.Получатель = СтрокаРегулярногоПлатежа.ПользовательДляОповещения;
			СоздатьСообщениеОбсуждения(СтрокаРегулярногоПлатежа, ДанныеСообщения, Истина);
			
		КонецЦикла;	
		
	КонецЕсли;
	
	НовыеЗадачиКВыполнению = АссистентУправления.НовыйТаблицаРегулярныхЗадачКВыполнению();
	НоваяЗадача = НовыеЗадачиКВыполнению.Добавить();
	НоваяЗадача.Дата = НачалоДня(ТекущаяДатаСеанса());
	НоваяЗадача.Задача = Ссылка;
	
	АссистентУправления.ЗапланироватьВыполнениеРегулярныхЗадач(НовыеЗадачиКВыполнению);
	АссистентУправления.ВыполнитьРегулярныеЗадачиСейчасВФоне();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗапланироватьНовыеЗадачи()
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Используется Тогда
		Возврат;
	КонецЕсли;
	
	НовыеЗадачиКВыполнению = АссистентУправления.НовыйТаблицаРегулярныхЗадачКВыполнению();
	МассивЗадач = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Ссылка);
	Справочники.ЗадачиАссистентаПоРегулярнымПлатежам.ЗапланироватьЗадачиКВыполнению(
		НовыеЗадачиКВыполнению, МассивЗадач);
		
	Если НовыеЗадачиКВыполнению.Количество() <> 0 Тогда
		АссистентУправления.ЗапланироватьВыполнениеРегулярныхЗадач(НовыеЗадачиКВыполнению);
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстСообщенияПриветствиеПередПервымВыполнением()
	
	// АПК:1223-выкл
	
	ТекстСообщения = НСтр("ru='Я буду напоминать о регулярных платежах и автоматически создавать их при необходимости, 
	|чтобы Вы смогли сосредоточиться на своих делах и не беспокоиться о них.'");
	
	// АПК:1223-вкл
	
	ДобавитьТекстДобрыйДень(ТекстСообщения);
	
	ТекстСообщения = СтрШаблон(ТекстСообщения); 
	
	Возврат ТекстСообщения;
	
КонецФункции

Процедура ДобавитьТекстДобрыйДень(ТекстСообщения)
	
	КомпонентыСтроки = Новый Массив;
	КомпонентыСтроки.Добавить(НСтр("ru='Добрый день!'")); // АПК:374
	КомпонентыСтроки.Добавить(Символы.ПС);
	КомпонентыСтроки.Добавить(Символы.ПС);
	КомпонентыСтроки.Добавить(ТекстСообщения);
	ТекстСообщения = СтрСоединить(КомпонентыСтроки);
	
КонецПроцедуры

Процедура ДобавитьТекстПодписи(ТекстСообщения)
	
	КомпонентыСтроки = Новый Массив;
	КомпонентыСтроки.Добавить(ТекстСообщения);
	КомпонентыСтроки.Добавить(Символы.ПС);
	КомпонентыСтроки.Добавить(Символы.ПС);
	ПодписьТекст = НСтр("ru='С уважением, Даша
	|Ассистент 1С:Управление нашей фирмой'");
	КомпонентыСтроки.Добавить(ПодписьТекст);
	ТекстСообщения = СтрСоединить(КомпонентыСтроки);
	
КонецПроцедуры

Функция ТекстСообщенияНапоминаниеОРегулярныхПлатежах(ЭтоОтправкаEmail)
	
	ТекстСообщения = НСтр("ru='Напоминаю, что пришло время создать регулярные платежи.'");
	
	Если ЭтоОтправкаEmail Тогда
		ДобавитьТекстДобрыйДень(ТекстСообщения);
		ДобавитьТекстПодписи(ТекстСообщения);
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции

Функция ТекстСообщенияРегулярныйПлатежСоздан(ЭтоОтправкаEmail)
	
	ТекстСообщения = НСтр("ru='Пришло время регулярных платежей. Я уже создала документы, осталось их оплатить.'");
	
	Если ЭтоОтправкаEmail Тогда
		ДобавитьТекстДобрыйДень(ТекстСообщения);
		ДобавитьТекстПодписи(ТекстСообщения);
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции

Функция ЭтоОтправкаEmail(СтрокаРегулярногоПлатежа)
	
	Возврат ЗначениеЗаполнено(СтрокаРегулярногоПлатежа.УчетнаяЗапись)
		И ЗначениеЗаполнено(СтрокаРегулярногоПлатежа.ПользовательДляОповещения); 
	
КонецФункции

Функция ЭтоОтправкаСообщенияОбсуждения(СтрокаРегулярногоПлатежа)
	
	Если СтрокаРегулярногоПлатежа.СпособОповещения =
			Перечисления.СпособОповещенияАссистентаУправления.СообщениеЛичногоОбсужденияПользователю
		И ЗначениеЗаполнено(СтрокаРегулярногоПлатежа.ПользовательДляОповещения) Тогда 
		Возврат Истина;
	КонецЕсли;
	
	Если СтрокаРегулярногоПлатежа.СпособОповещения =
			Перечисления.СпособОповещенияАссистентаУправления.СообщениеОбщегоОбсуждения 
		И ЗначениеЗаполнено(СтрокаРегулярногоПлатежа.ИдентификаторОбщегоОбсуждения) Тогда 
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура СоздатьEmail(СтрокаРегулярногоПлатежа, ТекстСообщения)
	
	ПредставлениеПолучателя =
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаРегулярногоПлатежа.ПользовательДляОповещения, "Наименование");
	КонтактнаяИнформацияПользователя = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		СтрокаРегулярногоПлатежа.ПользовательДляОповещения,
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, , Ложь);
	АдресаЭлектроннойПочты = Новый Массив;
	СоответствиеАдресов = Новый Соответствие;
	Для каждого ДанныеКонтактнойИнформации Из КонтактнаяИнформацияПользователя Цикл
		ОписаниеПолучателя = Новый Структура;
		ОписаниеПолучателя.Вставить("Адрес", ДанныеКонтактнойИнформации.Представление);
		ОписаниеПолучателя.Вставить("Представление", ПредставлениеПолучателя);
		АдресаЭлектроннойПочты.Добавить(ОписаниеПолучателя);
		СоответствиеАдресов.Вставить(ПредставлениеПолучателя, ДанныеКонтактнойИнформации.Представление);
	КонецЦикла;
	
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Кому = АдресаЭлектроннойПочты;
	ПараметрыПисьма.Тема = НСтр("ru='Напоминание о регулярных платежах'");
	ПараметрыПисьма.Тело = ТекстСообщения;
	ПараметрыПисьма.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	ПараметрыПисьма.Вставить("Важность", "");
	
	ПочтовоеСообщение =
		РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(СтрокаРегулярногоПлатежа.УчетнаяЗапись, ПараметрыПисьма);
	РаботаСПочтовымиСообщениями.ОтправитьПисьмо(СтрокаРегулярногоПлатежа.УчетнаяЗапись, ПочтовоеСообщение);
	
КонецПроцедуры

Процедура СоздатьСообщениеОбсуждения(СтрокаРегулярногоПлатежа, ДанныеСообщения, ОтправитьСейчас = Ложь)
	
	Если ЗначениеЗаполнено(СтрокаРегулярногоПлатежа.ИдентификаторОбщегоОбсуждения) Тогда
		ДанныеСообщения.Объект =
			Новый ИдентификаторОбсужденияСистемыВзаимодействия(СтрокаРегулярногоПлатежа.ИдентификаторОбщегоОбсуждения);
	ИначеЕсли ЗначениеЗаполнено(СтрокаРегулярногоПлатежа.ПользовательДляОповещения) Тогда
		ДанныеСообщения.Объект = СтрокаРегулярногоПлатежа.ПользовательДляОповещения;
	Иначе
		ТекстОшибки =
			НСтр("ru='У задачи не заполнены параметры: ""Пользователь для оповещения"" или ""Общее обсуждение"".'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	ДанныеСообщения.Автор = АссистентУправления.ПользовательАссистент();
	
	Если ОтправитьСейчас Тогда
		ОбсужденияУНФ.СоздатьСообщение(ДанныеСообщения);
	Иначе
		ОбсужденияУНФ.СоздатьСообщениеОтложенно(ДанныеСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура СброситьПризнакНеобходимоПоприветствовать()
	
	ОбменДаннымиЗагрузка = ОбменДанными.Загрузка;
	ОбменДанными.Загрузка = Истина;
	НеобходимоПоприветствовать = Ложь;
	Записать();
	ОбменДанными.Загрузка = ОбменДаннымиЗагрузка;
	
КонецПроцедуры

Процедура ДобавитьКнопкуДействияДляСообщения(АвтоматическиСоздаватьПлатеж, ДействияСообщения)
	
	Если АвтоматическиСоздаватьПлатеж Тогда
		ДействияСообщения.Добавить("ПерейтиКДокументам", НСтр("ru='Перейти к документам'"));
	Иначе	
		ДействияСообщения.Добавить("ПерейтиКСозданиюДокументов", НСтр("ru='Перейти к созданию документов'"));
	КонецЕсли;
	
КонецПроцедуры

Функция АктуальныеРегулярныеПлатежи()

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикПлатежей.Период КАК Дата,
	|	ПараметрыРегулярныхПлатежей.Идентификатор КАК Идентификатор,
	|	ПараметрыРегулярныхПлатежей.ИдентификаторОбщегоОбсуждения КАК ИдентификаторОбщегоОбсуждения,
	|	ПараметрыРегулярныхПлатежей.ПользовательДляОповещения КАК ПользовательДляОповещения,
	|	ПараметрыРегулярныхПлатежей.СпособОповещения КАК СпособОповещения,
	|	ПараметрыРегулярныхПлатежей.УчетнаяЗапись КАК УчетнаяЗапись,
	|	ПараметрыРегулярныхПлатежей.ИсходныйДокумент КАК ИсходныйДокумент,
	|	ПараметрыРегулярныхПлатежей.АвтоматическиСоздаватьРегулярныйПлатеж КАК АвтоматическиСоздаватьРегулярныйПлатеж
	|ИЗ
	|	Справочник.ЗадачиАссистентаПоРегулярнымПлатежам.ПараметрыРегулярныхПлатежей КАК ПараметрыРегулярныхПлатежей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РегулярныеПлатежиГрафик КАК ГрафикПлатежей
	|		ПО ПараметрыРегулярныхПлатежей.ИсходныйДокумент = ГрафикПлатежей.ИсходныйДокумент
	|ГДЕ
	|	ГрафикПлатежей.Период <= &ТекущаяДата";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли