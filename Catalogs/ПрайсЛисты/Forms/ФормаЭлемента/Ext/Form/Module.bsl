 

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПечатьПрайсЛиста",							"Доступность", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИерархияСодержимого",						"Доступность", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СоставРеквизитов",							"Доступность", Ложь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаЦены",								"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаКолонки",								"ТолькоПросмотр", Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "МаксимальнаяЦена",							"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "МинимальнаяЦена",							"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УсловнаяЦена",								"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаЦенаПоУсловию",						"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НоменклатураБезЦен",						"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормироватьПоНаличию",						"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИсключитьПустыеВидыЦен",					"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидЦенСравнить",							"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаУсловиеСравнения",					"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаВалютаКурс",							"ТолькоПросмотр", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НастройкиОтбораНоменклатурыНастройкиОтбор",	"ТолькоПросмотр", Истина);
	
	ИнициализироватьНастройкиСКД();
	УстановитьЗначенияОтбораНоменклатуры();	

	ЗаголовкиКолонокСЦенами = (Объект.НазваниеЦеныПредставлением = 1);
	
КонецПроцедуры  
 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьПредставлениеНоменклатуры();
	ЗаполнитьОбразецПрайсЛиста();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПослеОткрытияФормыСведенияОДокументе(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Результат.Свойство("ВыводитьДатуФормирования",	Объект.ВыводитьДатуФормирования);
	Результат.Свойство("ДатаФормирования",			Объект.ДатаФормирования);
	Результат.Свойство("ВариантыСортировки",		Объект.ВариантыСортировки);
	Результат.Свойство("Организация",				Объект.Организация);
	Результат.Свойство("Описание",					Объект.Описание);
	
КонецПроцедуры  

&НаКлиенте
Процедура ЗаголовкиКолонокСЦенамиПриИзменении(Элемент)
	
	Объект.НазваниеЦеныПредставлением = (ЗаголовкиКолонокСЦенами = 1);
	
КонецПроцедуры

&НаКлиенте
Процедура НедействителенПриИзменении(Элемент)
	
	Если Не Объект.Недействителен Тогда Возврат КонецЕсли;
	
	Если ЭлементОсновной() Тогда
		ПараметрыОповещения = Новый Структура();
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияПредупрежденияНедействителен", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьПредупреждение(ОповещениеОЗакрытии, НСтр("ru = 'Для установки ""Недействителен"" необходимо выбрать основным другой элемент справочника.'"), , НСтр("ru = 'Элемент выбран основным'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПредупрежденияНедействителен(Параметры) Экспорт
	Объект.Недействителен = Ложь;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЭлементОсновной()
	
	Настройка = ПланыВидовХарактеристик.НастройкиПользователей["РабочийПрайсЛистОрганизации"];
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());
	Запрос.УстановитьПараметр("Настройка", Настройка);
	Запрос.УстановитьПараметр("Значение", Объект.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПользователей.Пользователь КАК Пользователь,
	|	НастройкиПользователей.Настройка КАК Настройка,
	|	НастройкиПользователей.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	|ГДЕ
	|	НастройкиПользователей.Пользователь = &Пользователь
	|	И НастройкиПользователей.Настройка = &Настройка
	|	И НастройкиПользователей.Значение = &Значение";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПредставлениеНоменклатуры()
	Перем ПараметрыКартинки;
	
	Если Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Диафильм") Тогда
		
		ПараметрыКартинки = Новый Структура;
		ПараметрыКартинки.Вставить("КоличествоКолонок", Объект.КоличествоКолонок);
		ПараметрыКартинки.Вставить("КартинкаШирина", Объект.КартинкаШирина);
		ПараметрыКартинки.Вставить("КартинкаВысота", Объект.КартинкаВысота);
		
	КонецЕсли;
	
	СоставРеквизитов = ЦенообразованиеКлиент.ПредставлениеНоменклатурыСтрокой(Объект.ПредставлениеНоменклатуры, ПараметрыКартинки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОбразецПрайсЛиста()
	
	Если Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Полотно") Тогда
		
		Элементы.ДекорацияОбразецПрайсЛиста.Картинка = БиблиотекаКартинок.ВариантПрайсЛистаПолотно;
		
	ИначеЕсли Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.ДвеКолонки") Тогда
		
		Элементы.ДекорацияОбразецПрайсЛиста.Картинка = БиблиотекаКартинок.ВариантПрайсЛистаКолонки;
		
	ИначеЕсли Объект.ПечатьПрайсЛиста = ПредопределенноеЗначение("Перечисление.ВариантыПечатиПрайсЛиста.Диафильм") Тогда
		
		Элементы.ДекорацияОбразецПрайсЛиста.Картинка = БиблиотекаКартинок.ВариантПрайсЛистаДиафильм;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьНастройкиСКД()
	
	СсылкаВоВременномХранилище = ПрайсЛистыСлужебный.ИнициализироватьНастройкиОтбораПрайсЛиста(УникальныйИдентификатор);
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СсылкаВоВременномХранилище);
	НастройкиОтбораНоменклатуры.Инициализировать(ИсточникНастроек); 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияОтбораНоменклатуры()
	
	ПрайсЛистыСлужебный.СКДОтборНоменклатурыИзТабличнойЧасти(НастройкиОтбораНоменклатуры, Объект.ОтборНоменклатуры);
	
КонецПроцедуры

#КонецОбласти

