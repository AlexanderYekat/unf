#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Установить переданные настройки пользователя.
// 
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь
//  ПолноеИмяОбъекта - Строка - имя объекта метаданных, например, "Документ.ЗаказПокупателя"
//  ТаблицаНастроек  - ТаблицаЗначений - Записываемые настройки
//       * Пометка - Булево - Признак включения команды в подменю
//       * Наименование - Строка - заголовок команды
//
Процедура ЗаписатьНастройкиПользователя(Пользователь, ПолноеИмяОбъекта, ТаблицаНастроек) Экспорт
	
	Попытка
		
		НаборЗаписей = РегистрыСведений.НастройкиПунктовСозданияНаОсновании.СоздатьНаборЗаписей();

		НаборЗаписей.Отбор.Пользователь.Использование = Истина;
		НаборЗаписей.Отбор.Пользователь.Значение = Пользователь;
		НаборЗаписей.Отбор.ПолноеИмяОбъекта.Использование = Истина;
		НаборЗаписей.Отбор.ПолноеИмяОбъекта.Значение = ПолноеИмяОбъекта;

		Запись = НаборЗаписей.Добавить();

		Запись.Пользователь = Пользователь;
		Запись.ПолноеИмяОбъекта = ПолноеИмяОбъекта;
		Запись.Хранилище = Новый ХранилищеЗначения(ТаблицаНастроек);
		
		НаборЗаписей.Записать();
		
	Исключение
		
		Отказ = Истина;
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(НСтр("ru='Создание на основании.Запись настроек пользователя.'",
			ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ТекстОшибки);
		
	КонецПопытки;

КонецПроцедуры

// Получить сохраненные настройки пользователя.
// 
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь
//  ПолноеИмяОбъекта - Строка - имя объекта метаданных, например, "Документ.ЗаказПокупателя"
// 
// Возвращаемое значение:
//  ТаблицаНастроек  - ТаблицаЗначений - Перечень команд, отображаемых в подменю
//       * Пометка - Булево - Признак включения команды в подменю
//       * Наименование - Строка - заголовок команды
//
Функция НастройкиПользователя(Пользователь, ПолноеИмяОбъекта) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПунктовСозданияНаОсновании.Хранилище КАК Хранилище
	|ИЗ
	|	РегистрСведений.НастройкиПунктовСозданияНаОсновании КАК НастройкиПунктовСозданияНаОсновании
	|ГДЕ
	|	НастройкиПунктовСозданияНаОсновании.Пользователь = &Пользователь
	|	И НастройкиПунктовСозданияНаОсновании.ПолноеИмяОбъекта = &ПолноеИмяОбъекта";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ПолноеИмяОбъекта", ПолноеИмяОбъекта);
	РезультатЗапроса = Запрос.Выполнить();      
	
	НастройкиОбъектаПоУмолчанию = НастройкиОбъектаПоУмолчанию(ПолноеИмяОбъекта);  
	
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат НастройкиОбъектаПоУмолчанию;  
	Иначе 
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		НастройкиИзХранилища = Выборка.Хранилище.Получить();
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	НастройкиОбъектаПоУмолчанию.Пометка КАК Пометка,
		               |	НастройкиОбъектаПоУмолчанию.Наименование КАК Наименование
		               |ПОМЕСТИТЬ НастройкиОбъектаПоУмолчанию
		               |ИЗ
		               |	&НастройкиОбъектаПоУмолчанию КАК НастройкиОбъектаПоУмолчанию
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НастройкиИзХранилища.Пометка КАК Пометка,
		               |	НастройкиИзХранилища.Наименование КАК Наименование
		               |ПОМЕСТИТЬ НастройкиИзХранилища
		               |ИЗ
		               |	&НастройкиИзХранилища КАК НастройкиИзХранилища
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НастройкиОбъектаПоУмолчанию.Пометка КАК Пометка,
		               |	НастройкиОбъектаПоУмолчанию.Наименование КАК Наименование
		               |ПОМЕСТИТЬ НовыеПункты
		               |ИЗ
		               |	НастройкиОбъектаПоУмолчанию КАК НастройкиОбъектаПоУмолчанию
		               |		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиИзХранилища КАК НастройкиИзХранилища
		               |		ПО НастройкиОбъектаПоУмолчанию.Наименование = НастройкиИзХранилища.Наименование
		               |ГДЕ
		               |	НастройкиИзХранилища.Пометка ЕСТЬ NULL
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НастройкиИзХранилища.Пометка КАК Пометка,
		               |	НастройкиИзХранилища.Наименование КАК Наименование
		               |ИЗ
		               |	НастройкиИзХранилища КАК НастройкиИзХранилища
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НовыеПункты.Пометка,
		               |	НовыеПункты.Наименование
		               |ИЗ
		               |	НовыеПункты КАК НовыеПункты";
		Запрос.УстановитьПараметр("НастройкиОбъектаПоУмолчанию", НастройкиОбъектаПоУмолчанию);
		Запрос.УстановитьПараметр("НастройкиИзХранилища", НастройкиИзХранилища);
		Запрос.УстановитьПараметр("НаименованиеПунктаНастроек", НаименованиеПунктаНастроек());
		РезультатЗапроса = Запрос.Выполнить();     
		
		Возврат РезультатЗапроса.Выгрузить();
	КонецЕсли;

КонецФункции

// Получить сохраненные настройки пользователя.
// 
// Возвращаемое значение:
//        Строка - наименование пункта с настройками
//
Функция НаименованиеПунктаНастроек() Экспорт
	
	Возврат НСтр("ru='Настроить'");

КонецФункции

// Удалить настройки пользователя для указанного документа.
// 
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - Пользователь
//  ПолноеИмяОбъекта - Строка - имя объекта метаданных, например, "Документ.ЗаказПокупателя"
//
Процедура УдалитьНастройкиПользователя(Пользователь, ПолноеИмяОбъекта) Экспорт
	
	Попытка
		
		НаборЗаписей = РегистрыСведений.НастройкиПунктовСозданияНаОсновании.СоздатьНаборЗаписей();

		НаборЗаписей.Отбор.Пользователь.Использование = Истина;
		НаборЗаписей.Отбор.Пользователь.Значение = Пользователь;
		НаборЗаписей.Отбор.ПолноеИмяОбъекта.Использование = Истина;
		НаборЗаписей.Отбор.ПолноеИмяОбъекта.Значение = ПолноеИмяОбъекта;   
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
		
	Исключение
		
		Отказ = Истина;
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(НСтр("ru='Создание на основании.Удаление настроек пользователя.'",
			ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ТекстОшибки);
		
	КонецПопытки;

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Получить сохраненные настройки пользователя.
// 
// Параметры:
//  ПолноеИмяОбъекта - Строка - имя объекта метаданных, например, "Документ.ЗаказПокупателя"
// 
// Возвращаемое значение:
//  ТаблицаНастроек  - ТаблицаЗначений - Перечень команд, отображаемых в подменю
//       * Пометка - Булево - Признак включения команды в подменю
//       * Наименование - Строка - заголовок команды
//
Функция НастройкиОбъектаПоУмолчанию(ПолноеИмяОбъекта)
	
	ТаблицаКоманд = ТаблицаКоманд();  
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяОбъекта); 
	ПараметрыВызова = Новый Структура("ПоУмолчанию", Истина);
	МенеджерОбъекта.ДобавитьКомандыСозданияНаОсновании(ТаблицаКоманд, ПараметрыВызова); 
	ТаблицаНастроек = ТаблицаНастроек();          
	НаименованиеПунктаНастроек = НаименованиеПунктаНастроек();
	Для Каждого СтрокаКоманд Из ТаблицаКоманд Цикл   
		Если СтрокаКоманд.Представление = НаименованиеПунктаНастроек Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаНастроек = ТаблицаНастроек.Добавить();
		СтрокаНастроек.Наименование = СтрокаКоманд.Представление;
		СтрокаНастроек.Пометка = Истина;
	КонецЦикла;         
	
	Возврат ТаблицаНастроек;

КонецФункции

// Шаблон таблицы подключаемых команд.
//
// Возвращаемое значение:
//  ТаблицаЗначений:
//   * Вид - Строка
//   * Идентификатор - Строка
//   * Представление - Строка
//   * Подменю - Строка
//   * Важность - Строка
//   * Порядок - Число
//   * Картинка - Картинка
//   * СочетаниеКлавиш - СочетаниеКлавиш
//   * ОтображениеКнопки - Неопределено
//   * ТолькоВоВсехДействиях - Булево
//   * ЗначениеПометки - Строка
//   * ТипПараметра - ОписаниеТипов
//   * ВидимостьВФормах - Строка
//   * Назначение - Строка
//   * ФункциональныеОпции - Строка
//   * УсловияВидимости - Массив
//   * ИзменяетВыбранныеОбъекты - Булево
//   * МножественныйВыбор - Булево, Неопределено
//   * РежимЗаписи - Строка
//   * ТребуетсяРаботаСФайлами - Булево
//   * Менеджер - Строка
//   * Обработчик - Строка
//   * ДополнительныеПараметры - Структура
//   * ИмяФормы - Строка
//   * ПараметрыФормы - Структура, Неопределено
//   * ИмяПараметраФормы - Строка
//   * ПорядокВажности - Число
//   * ИмяВФорме - Строка
//   * ЕстьУсловияВидимости - Булево
//   * КлючПараметровРазмещения - Строка
//
Функция ТаблицаКоманд()
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Вид", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Подменю", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Важность", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Картинка"); 
	Таблица.Колонки.Добавить("СочетаниеКлавиш"); 
	Таблица.Колонки.Добавить("ОтображениеКнопки");
	Таблица.Колонки.Добавить("ТолькоВоВсехДействиях", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ЗначениеПометки", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ТипПараметра"); 
	Таблица.Колонки.Добавить("ВидимостьВФормах", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Назначение", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ФункциональныеОпции", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("УсловияВидимости", Новый ОписаниеТипов("Массив"));
	Таблица.Колонки.Добавить("ИзменяетВыбранныеОбъекты"); 
	Таблица.Колонки.Добавить("МножественныйВыбор"); 
	Таблица.Колонки.Добавить("РежимЗаписи", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ТребуетсяРаботаСФайлами", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("Менеджер", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Обработчик", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ДополнительныеПараметры", Новый ОписаниеТипов("Структура"));
	Таблица.Колонки.Добавить("ИмяФормы", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ПараметрыФормы");
	Таблица.Колонки.Добавить("ИмяПараметраФормы", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ПорядокВажности", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("ИмяВФорме", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("ЕстьУсловияВидимости", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("КлючПараметровРазмещения", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("УсловияВидимостиПоТипамОбъектов", Новый ОписаниеТипов("Соответствие"));
		
	Возврат Таблица;
КонецФункции

// Шаблон таблицы настроек
//
// Возвращаемое значение:
//  ТаблицаЗначений:
//       * Пометка - Булево - Признак включения команды в подменю
//       * Наименование - Строка - заголовок команды
//
Функция ТаблицаНастроек()
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Пометка", Новый ОписаниеТипов("Булево"));   
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	ПараметрыСтроки = Новый КвалификаторыСтроки(255);
	Таблица.Колонки.Добавить("Наименование", Новый ОписаниеТипов(МассивТипов, , ПараметрыСтроки));
		
	Возврат Таблица;
КонецФункции

#КонецОбласти

#КонецЕсли

